public final class love/forte/simbot/component/onebot/v11/core/OneBot11 {
	public static final field DefaultJson Lkotlinx/serialization/json/Json;
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/OneBot11;
	public static final field serializersModule Lkotlinx/serialization/modules/SerializersModule;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/OneBot11UsageBuilder {
	public abstract fun botManager (Llove/forte/simbot/common/function/ConfigurerFunction;)V
	public abstract fun component (Llove/forte/simbot/common/function/ConfigurerFunction;)V
}

public final class love/forte/simbot/component/onebot/v11/core/OneBot11UsageKt {
	public static final fun oneBot11Bots (Llove/forte/simbot/application/Application;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun oneBot11BotsIfSupport (Llove/forte/simbot/application/Application;Lkotlin/jvm/functions/Function1;)V
	public static final fun useOneBot11 (Llove/forte/simbot/application/ApplicationFactoryConfigurer;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun useOneBot11$default (Llove/forte/simbot/application/ApplicationFactoryConfigurer;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/actor/OneBotFriend : love/forte/simbot/component/onebot/v11/core/actor/OneBotStrangerAware, love/forte/simbot/component/onebot/v11/core/actor/SendLikeSupport, love/forte/simbot/definition/Contact {
	public fun getAvatar ()Ljava/lang/String;
	public abstract fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public abstract fun getId ()Llove/forte/simbot/common/id/ID;
	public abstract synthetic fun send (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract synthetic fun send (Llove/forte/simbot/message/Message;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract synthetic fun send (Llove/forte/simbot/message/MessageContent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun sendAsync (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public fun sendAsync (Llove/forte/simbot/message/Message;)Ljava/util/concurrent/CompletableFuture;
	public fun sendAsync (Llove/forte/simbot/message/MessageContent;)Ljava/util/concurrent/CompletableFuture;
	public fun sendBlocking (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/message/OneBotMessageReceipt;
	public synthetic fun sendBlocking (Ljava/lang/String;)Llove/forte/simbot/message/MessageReceipt;
	public fun sendBlocking (Llove/forte/simbot/message/Message;)Llove/forte/simbot/component/onebot/v11/message/OneBotMessageReceipt;
	public synthetic fun sendBlocking (Llove/forte/simbot/message/Message;)Llove/forte/simbot/message/MessageReceipt;
	public fun sendBlocking (Llove/forte/simbot/message/MessageContent;)Llove/forte/simbot/component/onebot/v11/message/OneBotMessageReceipt;
	public synthetic fun sendBlocking (Llove/forte/simbot/message/MessageContent;)Llove/forte/simbot/message/MessageReceipt;
	public fun sendReserve (Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public fun sendReserve (Llove/forte/simbot/message/Message;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public fun sendReserve (Llove/forte/simbot/message/MessageContent;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/actor/OneBotGroup : love/forte/simbot/ability/DeleteSupport, love/forte/simbot/definition/ChatGroup {
	public abstract synthetic fun ban (ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun banAsync (Z)Ljava/util/concurrent/CompletableFuture;
	public fun banBlocking (Z)V
	public fun banReserve (Z)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract synthetic fun botAsMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract synthetic fun delete ([Llove/forte/simbot/ability/DeleteOption;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getAllHonorInfo (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getAllHonorInfoAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getAllHonorInfoBlocking ()Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult;
	public fun getAllHonorInfoReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public fun getBotAsMember ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;
	public synthetic fun getBotAsMember ()Llove/forte/simbot/definition/Member;
	public fun getBotAsMemberAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getBotAsMemberReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public abstract synthetic fun getHonorInfo (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getHonorInfoAsync (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public fun getHonorInfoBlocking (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult;
	public fun getHonorInfoReserve (Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract fun getId ()Llove/forte/simbot/common/id/ID;
	public abstract fun getMaxMemberCount ()I
	public fun getMember (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;
	public synthetic fun getMember (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/definition/Member;
	public fun getMemberAsync (Llove/forte/simbot/common/id/ID;)Ljava/util/concurrent/CompletableFuture;
	public abstract fun getMemberCount ()I
	public fun getMemberReserve (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract fun getMembers ()Llove/forte/simbot/common/collectable/Collectable;
	public abstract fun getName ()Ljava/lang/String;
	public fun getRoles ()Llove/forte/simbot/common/collectable/Collectable;
	public abstract synthetic fun member (Llove/forte/simbot/common/id/ID;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract synthetic fun send (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract synthetic fun send (Llove/forte/simbot/message/Message;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract synthetic fun send (Llove/forte/simbot/message/MessageContent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun sendAsync (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public fun sendAsync (Llove/forte/simbot/message/Message;)Ljava/util/concurrent/CompletableFuture;
	public fun sendAsync (Llove/forte/simbot/message/MessageContent;)Ljava/util/concurrent/CompletableFuture;
	public fun sendBlocking (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/message/OneBotMessageReceipt;
	public synthetic fun sendBlocking (Ljava/lang/String;)Llove/forte/simbot/message/MessageReceipt;
	public fun sendBlocking (Llove/forte/simbot/message/Message;)Llove/forte/simbot/component/onebot/v11/message/OneBotMessageReceipt;
	public synthetic fun sendBlocking (Llove/forte/simbot/message/Message;)Llove/forte/simbot/message/MessageReceipt;
	public fun sendBlocking (Llove/forte/simbot/message/MessageContent;)Llove/forte/simbot/component/onebot/v11/message/OneBotMessageReceipt;
	public synthetic fun sendBlocking (Llove/forte/simbot/message/MessageContent;)Llove/forte/simbot/message/MessageReceipt;
	public fun sendReserve (Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public fun sendReserve (Llove/forte/simbot/message/Message;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public fun sendReserve (Llove/forte/simbot/message/MessageContent;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract synthetic fun setAdmin (Llove/forte/simbot/common/id/ID;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun setAdminAsync (Llove/forte/simbot/common/id/ID;Z)Ljava/util/concurrent/CompletableFuture;
	public fun setAdminBlocking (Llove/forte/simbot/common/id/ID;Z)V
	public fun setAdminReserve (Llove/forte/simbot/common/id/ID;Z)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract synthetic fun setAnonymous (ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun setAnonymousAsync (Z)Ljava/util/concurrent/CompletableFuture;
	public fun setAnonymousBlocking (Z)V
	public fun setAnonymousReserve (Z)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract synthetic fun setBotGroupNick (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun setBotGroupNickAsync (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public fun setBotGroupNickBlocking (Ljava/lang/String;)V
	public fun setBotGroupNickReserve (Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract synthetic fun setName (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun setNameAsync (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public fun setNameBlocking (Ljava/lang/String;)V
	public fun setNameReserve (Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
}

public abstract class love/forte/simbot/component/onebot/v11/core/actor/OneBotGroupDeleteOption : love/forte/simbot/ability/DeleteOption {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroupDeleteOption$Companion;
	public static final fun dismiss ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroupDeleteOption$Dismiss;
}

public final class love/forte/simbot/component/onebot/v11/core/actor/OneBotGroupDeleteOption$Companion {
	public final fun dismiss ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroupDeleteOption$Dismiss;
}

public final class love/forte/simbot/component/onebot/v11/core/actor/OneBotGroupDeleteOption$Dismiss : love/forte/simbot/component/onebot/v11/core/actor/OneBotGroupDeleteOption {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroupDeleteOption$Dismiss;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class love/forte/simbot/component/onebot/v11/core/actor/OneBotGroupKt {
	public static final synthetic fun ban (Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final synthetic fun unban (Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/actor/OneBotMember : love/forte/simbot/ability/DeleteSupport, love/forte/simbot/component/onebot/v11/core/actor/OneBotStrangerAware, love/forte/simbot/definition/Member {
	public abstract synthetic fun ban (JLjava/util/concurrent/TimeUnit;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract synthetic fun ban-VtjQ1oo (JLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun banAsync (JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/CompletableFuture;
	public fun banBlocking (JLjava/util/concurrent/TimeUnit;)V
	public fun banReserve (JLjava/util/concurrent/TimeUnit;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract synthetic fun delete ([Llove/forte/simbot/ability/DeleteOption;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getAvatar ()Ljava/lang/String;
	public abstract fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public abstract fun getId ()Llove/forte/simbot/common/id/ID;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getNick ()Ljava/lang/String;
	public abstract fun getRole ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMemberRole;
	public abstract synthetic fun getSourceMemberInfo (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSourceMemberInfoAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getSourceMemberInfoBlocking ()Llove/forte/simbot/component/onebot/v11/core/api/GetGroupMemberInfoResult;
	public fun getSourceMemberInfoReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract synthetic fun send (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract synthetic fun send (Llove/forte/simbot/message/Message;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract synthetic fun send (Llove/forte/simbot/message/MessageContent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun sendAsync (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public fun sendAsync (Llove/forte/simbot/message/Message;)Ljava/util/concurrent/CompletableFuture;
	public fun sendAsync (Llove/forte/simbot/message/MessageContent;)Ljava/util/concurrent/CompletableFuture;
	public fun sendBlocking (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/message/OneBotMessageReceipt;
	public synthetic fun sendBlocking (Ljava/lang/String;)Llove/forte/simbot/message/MessageReceipt;
	public fun sendBlocking (Llove/forte/simbot/message/Message;)Llove/forte/simbot/component/onebot/v11/message/OneBotMessageReceipt;
	public synthetic fun sendBlocking (Llove/forte/simbot/message/Message;)Llove/forte/simbot/message/MessageReceipt;
	public fun sendBlocking (Llove/forte/simbot/message/MessageContent;)Llove/forte/simbot/component/onebot/v11/message/OneBotMessageReceipt;
	public synthetic fun sendBlocking (Llove/forte/simbot/message/MessageContent;)Llove/forte/simbot/message/MessageReceipt;
	public fun sendReserve (Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public fun sendReserve (Llove/forte/simbot/message/Message;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public fun sendReserve (Llove/forte/simbot/message/MessageContent;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract synthetic fun setAdmin (ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun setAdminAsync (Z)Ljava/util/concurrent/CompletableFuture;
	public fun setAdminBlocking (Z)V
	public fun setAdminReserve (Z)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract synthetic fun setNick (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun setNickAsync (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public fun setNickBlocking (Ljava/lang/String;)V
	public fun setNickReserve (Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract synthetic fun setSpecialTitle (Ljava/lang/String;JLjava/util/concurrent/TimeUnit;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract synthetic fun setSpecialTitle (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun setSpecialTitle$default (Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public abstract synthetic fun setSpecialTitle-8Mi8wO0 (Ljava/lang/String;JLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun setSpecialTitleAsync (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public fun setSpecialTitleAsync (Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/CompletableFuture;
	public static synthetic fun setSpecialTitleAsync$default (Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
	public fun setSpecialTitleBlocking (Ljava/lang/String;)V
	public fun setSpecialTitleBlocking (Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)V
	public static synthetic fun setSpecialTitleBlocking$default (Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;Ljava/lang/String;ILjava/lang/Object;)V
	public fun setSpecialTitleReserve (Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public fun setSpecialTitleReserve (Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static synthetic fun setSpecialTitleReserve$default (Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;Ljava/lang/String;ILjava/lang/Object;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun unban (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun unbanAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun unbanBlocking ()V
	public fun unbanReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
}

public abstract class love/forte/simbot/component/onebot/v11/core/actor/OneBotMemberDeleteOption : love/forte/simbot/ability/DeleteOption {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMemberDeleteOption$Companion;
	public static final fun rejectRequest ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMemberDeleteOption$RejectRequest;
}

public final class love/forte/simbot/component/onebot/v11/core/actor/OneBotMemberDeleteOption$Companion {
	public final fun rejectRequest ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMemberDeleteOption$RejectRequest;
}

public final class love/forte/simbot/component/onebot/v11/core/actor/OneBotMemberDeleteOption$RejectRequest : love/forte/simbot/component/onebot/v11/core/actor/OneBotMemberDeleteOption {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMemberDeleteOption$RejectRequest;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class love/forte/simbot/component/onebot/v11/core/actor/OneBotMemberRole : java/lang/Enum, love/forte/simbot/definition/Role {
	public static final field ADMIN Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMemberRole;
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMemberRole$Companion;
	public static final field MEMBER Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMemberRole;
	public static final field OWNER Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMemberRole;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getId ()Llove/forte/simbot/common/id/ID;
	public synthetic fun getName ()Ljava/lang/String;
	public fun isAdmin ()Z
	public static fun valueOf (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMemberRole;
	public static final fun valueOfLenient (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMemberRole;
	public static fun values ()[Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMemberRole;
}

public final class love/forte/simbot/component/onebot/v11/core/actor/OneBotMemberRole$Companion {
	public final fun valueOfLenient (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMemberRole;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/actor/OneBotStranger : love/forte/simbot/definition/User {
	public abstract fun getAge ()I
	public fun getAvatar ()Ljava/lang/String;
	public abstract fun getId ()Llove/forte/simbot/common/id/ID;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getSex ()Ljava/lang/String;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/actor/OneBotStrangerAware {
	public abstract synthetic fun toStranger (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toStrangerAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun toStrangerBlocking ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotStranger;
	public fun toStrangerReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/actor/SendLikeSupport {
	public abstract synthetic fun sendLike (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun sendLikeAsync (I)Ljava/util/concurrent/CompletableFuture;
	public fun sendLikeBlocking (I)V
	public fun sendLikeReserve (I)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi {
	public abstract fun deserialize (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiResult;
	public abstract fun getAction ()Ljava/lang/String;
	public abstract fun getBody ()Ljava/lang/Object;
	public abstract fun getMethod ()Lio/ktor/http/HttpMethod;
	public fun resolveUrlAction (Lio/ktor/http/URLBuilder;Ljava/util/Collection;)V
	public fun resolveUrlExtensions (Lio/ktor/http/URLBuilder;)V
}

public final class love/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi$Actions {
	public static final field ASYNC_SUFFIX Ljava/lang/String;
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi$Actions;
	public static final field RATE_LIMITED_SUFFIX Ljava/lang/String;
}

public final class love/forte/simbot/component/onebot/v11/core/api/CanSendImageApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/CanSendImageApi$Factory;
	public static final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/CanSendImageApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/CanSendImageApi$Factory {
	public final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/CanSendImageApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/CanSendImageResult {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/CanSendImageResult$Companion;
	public final fun component1 ()Z
	public final fun copy (Z)Llove/forte/simbot/component/onebot/v11/core/api/CanSendImageResult;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/api/CanSendImageResult;ZILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/CanSendImageResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getYes ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/api/CanSendImageResult$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/CanSendImageResult$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/CanSendImageResult;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/CanSendImageResult;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/CanSendImageResult$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/CanSendRecordApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/CanSendRecordApi$Factory;
	public static final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/CanSendRecordApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/CanSendRecordApi$Factory {
	public final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/CanSendRecordApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/CanSendRecordResult {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/CanSendRecordResult$Companion;
	public final fun component1 ()Z
	public final fun copy (Z)Llove/forte/simbot/component/onebot/v11/core/api/CanSendRecordResult;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/api/CanSendRecordResult;ZILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/CanSendRecordResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getYes ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/api/CanSendRecordResult$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/CanSendRecordResult$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/CanSendRecordResult;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/CanSendRecordResult;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/CanSendRecordResult$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/CleanCacheApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/CleanCacheApi$Factory;
	public static final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/CleanCacheApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/CleanCacheApi$Factory {
	public final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/CleanCacheApi;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/api/CustomOneBotApi : love/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/CustomOneBotApi$Companion;
	public static fun builder (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/CustomOneBotApiBuilder;
	public static fun builder (Ljava/lang/String;Lio/ktor/http/HttpMethod;)Llove/forte/simbot/component/onebot/v11/core/api/CustomOneBotApiBuilder;
	public abstract fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/CustomOneBotApi$Companion {
	public final fun builder (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/CustomOneBotApiBuilder;
	public final fun builder (Ljava/lang/String;Lio/ktor/http/HttpMethod;)Llove/forte/simbot/component/onebot/v11/core/api/CustomOneBotApiBuilder;
	public static synthetic fun builder$default (Llove/forte/simbot/component/onebot/v11/core/api/CustomOneBotApi$Companion;Ljava/lang/String;Lio/ktor/http/HttpMethod;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/CustomOneBotApiBuilder;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/api/CustomOneBotApiBuilder {
	public fun body (Ljava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/CustomOneBotApiBuilder;
	public abstract fun build ()Llove/forte/simbot/component/onebot/v11/core/api/CustomOneBotApi;
	public abstract fun deserializer (Lkotlinx/serialization/DeserializationStrategy;)Llove/forte/simbot/component/onebot/v11/core/api/CustomOneBotApiBuilder;
	public fun deserializer (Llove/forte/simbot/component/onebot/v11/core/api/DynamicOneBotApiDeserializer;)Llove/forte/simbot/component/onebot/v11/core/api/CustomOneBotApiBuilder;
	public abstract fun getAction ()Ljava/lang/String;
	public abstract fun getBody ()Ljava/lang/Object;
	public abstract fun getDeserializer ()Llove/forte/simbot/component/onebot/v11/core/api/DynamicOneBotApiDeserializer;
	public abstract fun getMethod ()Lio/ktor/http/HttpMethod;
	public abstract fun setBody (Ljava/lang/Object;)V
	public abstract fun setDeserializer (Llove/forte/simbot/component/onebot/v11/core/api/DynamicOneBotApiDeserializer;)V
}

public final class love/forte/simbot/component/onebot/v11/core/api/CustomOneBotApiKt {
	public static final fun CustomOneBotApi (Ljava/lang/String;Lio/ktor/http/HttpMethod;Lkotlin/jvm/functions/Function1;)Llove/forte/simbot/component/onebot/v11/core/api/CustomOneBotApi;
	public static synthetic fun CustomOneBotApi$default (Ljava/lang/String;Lio/ktor/http/HttpMethod;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/CustomOneBotApi;
	public static final fun dataDeserializer (Llove/forte/simbot/component/onebot/v11/core/api/CustomOneBotApiBuilder;Lkotlinx/serialization/KSerializer;)Llove/forte/simbot/component/onebot/v11/core/api/CustomOneBotApiBuilder;
}

public final class love/forte/simbot/component/onebot/v11/core/api/DeleteMsgApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/DeleteMsgApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/DeleteMsgApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/DeleteMsgApi$Factory {
	public final fun create (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/DeleteMsgApi;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/api/DynamicOneBotApiDeserializer {
	public abstract fun deserialize (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiResult;
}

public abstract interface annotation class love/forte/simbot/component/onebot/v11/core/api/ExperimentalCustomOneBotApi : java/lang/annotation/Annotation {
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetCookiesApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/GetCookiesApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/GetCookiesApi;
	public static final fun create (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/GetCookiesApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetCookiesApi$Factory {
	public final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/GetCookiesApi;
	public final fun create (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/GetCookiesApi;
	public static synthetic fun create$default (Llove/forte/simbot/component/onebot/v11/core/api/GetCookiesApi$Factory;Ljava/lang/String;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/GetCookiesApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetCookiesResult {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/GetCookiesResult$Companion;
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/GetCookiesResult;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/api/GetCookiesResult;Ljava/lang/String;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/GetCookiesResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCookies ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/api/GetCookiesResult$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/GetCookiesResult$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/GetCookiesResult;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/GetCookiesResult;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetCookiesResult$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetCredentialsApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/GetCredentialsApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/GetCredentialsApi;
	public static final fun create (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/GetCredentialsApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetCredentialsApi$Factory {
	public final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/GetCredentialsApi;
	public final fun create (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/GetCredentialsApi;
	public static synthetic fun create$default (Llove/forte/simbot/component/onebot/v11/core/api/GetCredentialsApi$Factory;Ljava/lang/String;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/GetCredentialsApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetCredentialsResult {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/GetCredentialsResult$Companion;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()I
	public final fun copy (Ljava/lang/String;I)Llove/forte/simbot/component/onebot/v11/core/api/GetCredentialsResult;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/api/GetCredentialsResult;Ljava/lang/String;IILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/GetCredentialsResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCookies ()Ljava/lang/String;
	public final fun getCsrfToken ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/api/GetCredentialsResult$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/GetCredentialsResult$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/GetCredentialsResult;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/GetCredentialsResult;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetCredentialsResult$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetCsrfTokenApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/GetCsrfTokenApi$Factory;
	public static final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/GetCsrfTokenApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetCsrfTokenApi$Factory {
	public final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/GetCsrfTokenApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetCsrfTokenResult {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/GetCsrfTokenResult$Companion;
	public final fun component1 ()I
	public final fun copy (I)Llove/forte/simbot/component/onebot/v11/core/api/GetCsrfTokenResult;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/api/GetCsrfTokenResult;IILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/GetCsrfTokenResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getToken ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/api/GetCsrfTokenResult$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/GetCsrfTokenResult$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/GetCsrfTokenResult;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/GetCsrfTokenResult;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetCsrfTokenResult$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetForwardMsgApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/GetForwardMsgApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/GetForwardMsgApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetForwardMsgApi$Factory {
	public final fun create (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/GetForwardMsgApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetForwardMsgResult {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/GetForwardMsgResult$Companion;
	public final fun component1 ()Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMessage ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/api/GetForwardMsgResult$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/GetForwardMsgResult$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/GetForwardMsgResult;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/GetForwardMsgResult;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetForwardMsgResult$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetFriendListApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/GetFriendListApi$Factory;
	public static final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/GetFriendListApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetFriendListApi$Factory {
	public final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/GetFriendListApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetFriendListResult {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/GetFriendListResult$Companion;
	public final fun component1 ()Llove/forte/simbot/common/id/LongID;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Llove/forte/simbot/common/id/LongID;Ljava/lang/String;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/GetFriendListResult;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/api/GetFriendListResult;Llove/forte/simbot/common/id/LongID;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/GetFriendListResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getNickname ()Ljava/lang/String;
	public final fun getRemark ()Ljava/lang/String;
	public final fun getUserId ()Llove/forte/simbot/common/id/LongID;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/api/GetFriendListResult$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/GetFriendListResult$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/GetFriendListResult;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/GetFriendListResult;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetFriendListResult$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoApi$Factory;
	public static final field TYPE_ALL Ljava/lang/String;
	public static final field TYPE_EMOTION Ljava/lang/String;
	public static final field TYPE_LEGEND Ljava/lang/String;
	public static final field TYPE_PERFORMER Ljava/lang/String;
	public static final field TYPE_STRONG_NEWBIE Ljava/lang/String;
	public static final field TYPE_TALKATIVE Ljava/lang/String;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/common/id/ID;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoApi;
	public static final fun createAll (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoApi$Factory {
	public final fun create (Llove/forte/simbot/common/id/ID;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoApi;
	public final fun createAll (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$Companion;
	public final fun component1 ()Llove/forte/simbot/common/id/LongID;
	public final fun component2 ()Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$CurrentTalkative;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ljava/util/List;
	public final fun component6 ()Ljava/util/List;
	public final fun component7 ()Ljava/util/List;
	public final fun copy (Llove/forte/simbot/common/id/LongID;Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$CurrentTalkative;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult;Llove/forte/simbot/common/id/LongID;Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$CurrentTalkative;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCurrentTalkative ()Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$CurrentTalkative;
	public final fun getEmotionList ()Ljava/util/List;
	public final fun getGroupId ()Llove/forte/simbot/common/id/LongID;
	public final fun getLegendList ()Ljava/util/List;
	public final fun getPerformerList ()Ljava/util/List;
	public final fun getStrongNewbieList ()Ljava/util/List;
	public final fun getTalkativeList ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$CurrentTalkative {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$CurrentTalkative$Companion;
	public fun <init> (Llove/forte/simbot/common/id/LongID;Ljava/lang/String;Ljava/lang/String;I)V
	public synthetic fun <init> (Llove/forte/simbot/common/id/LongID;Ljava/lang/String;Ljava/lang/String;IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Llove/forte/simbot/common/id/LongID;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()I
	public final fun copy (Llove/forte/simbot/common/id/LongID;Ljava/lang/String;Ljava/lang/String;I)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$CurrentTalkative;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$CurrentTalkative;Llove/forte/simbot/common/id/LongID;Ljava/lang/String;Ljava/lang/String;IILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$CurrentTalkative;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAvatar ()Ljava/lang/String;
	public final fun getDayCount ()I
	public final fun getNickname ()Ljava/lang/String;
	public final fun getUserId ()Llove/forte/simbot/common/id/LongID;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$CurrentTalkative$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$CurrentTalkative$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$CurrentTalkative;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$CurrentTalkative;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$CurrentTalkative$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$HonorInfo {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$HonorInfo$Companion;
	public fun <init> (Llove/forte/simbot/common/id/LongID;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Llove/forte/simbot/common/id/LongID;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Llove/forte/simbot/common/id/LongID;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun copy (Llove/forte/simbot/common/id/LongID;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$HonorInfo;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$HonorInfo;Llove/forte/simbot/common/id/LongID;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$HonorInfo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAvatar ()Ljava/lang/String;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getNickname ()Ljava/lang/String;
	public final fun getUserId ()Llove/forte/simbot/common/id/LongID;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$HonorInfo$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$HonorInfo$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$HonorInfo;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$HonorInfo;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetGroupHonorInfoResult$HonorInfo$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetGroupInfoApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/GetGroupInfoApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupInfoApi;
	public static final fun create (Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupInfoApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetGroupInfoApi$Factory {
	public final fun create (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupInfoApi;
	public final fun create (Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupInfoApi;
	public static synthetic fun create$default (Llove/forte/simbot/component/onebot/v11/core/api/GetGroupInfoApi$Factory;Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupInfoApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetGroupInfoResult {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/GetGroupInfoResult$Companion;
	public final fun component1 ()Llove/forte/simbot/common/id/LongID;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()I
	public final fun component4 ()I
	public final fun copy (Llove/forte/simbot/common/id/LongID;Ljava/lang/String;II)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupInfoResult;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/api/GetGroupInfoResult;Llove/forte/simbot/common/id/LongID;Ljava/lang/String;IIILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupInfoResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGroupId ()Llove/forte/simbot/common/id/LongID;
	public final fun getGroupName ()Ljava/lang/String;
	public final fun getMaxMemberCount ()I
	public final fun getMemberCount ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/api/GetGroupInfoResult$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/GetGroupInfoResult$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupInfoResult;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/GetGroupInfoResult;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetGroupInfoResult$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetGroupListApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/GetGroupListApi$Factory;
	public static final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/GetGroupListApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetGroupListApi$Factory {
	public final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/GetGroupListApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetGroupMemberInfoApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/GetGroupMemberInfoApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupMemberInfoApi;
	public static final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupMemberInfoApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetGroupMemberInfoApi$Factory {
	public final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupMemberInfoApi;
	public final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupMemberInfoApi;
	public static synthetic fun create$default (Llove/forte/simbot/component/onebot/v11/core/api/GetGroupMemberInfoApi$Factory;Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupMemberInfoApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetGroupMemberInfoResult {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/GetGroupMemberInfoResult$Companion;
	public final fun component1 ()Llove/forte/simbot/common/id/LongID;
	public final fun component10 ()Ljava/lang/String;
	public final fun component11 ()Ljava/lang/String;
	public final fun component12 ()Z
	public final fun component13 ()Ljava/lang/String;
	public final fun component14 ()I
	public final fun component15 ()Z
	public final fun component2 ()Llove/forte/simbot/common/id/LongID;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()I
	public final fun component7 ()Ljava/lang/String;
	public final fun component8 ()I
	public final fun component9 ()I
	public final fun copy (Llove/forte/simbot/common/id/LongID;Llove/forte/simbot/common/id/LongID;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;IILjava/lang/String;Ljava/lang/String;ZLjava/lang/String;IZ)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupMemberInfoResult;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/api/GetGroupMemberInfoResult;Llove/forte/simbot/common/id/LongID;Llove/forte/simbot/common/id/LongID;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;IILjava/lang/String;Ljava/lang/String;ZLjava/lang/String;IZILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupMemberInfoResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAge ()I
	public final fun getArea ()Ljava/lang/String;
	public final fun getCard ()Ljava/lang/String;
	public final fun getCardChangeable ()Z
	public final fun getGroupId ()Llove/forte/simbot/common/id/LongID;
	public final fun getJoinTime ()I
	public final fun getLastSentTime ()I
	public final fun getLevel ()Ljava/lang/String;
	public final fun getNickname ()Ljava/lang/String;
	public final fun getRole ()Ljava/lang/String;
	public final fun getSex ()Ljava/lang/String;
	public final fun getTitle ()Ljava/lang/String;
	public final fun getTitleExpireTime ()I
	public final fun getUnfriendly ()Z
	public final fun getUserId ()Llove/forte/simbot/common/id/LongID;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/api/GetGroupMemberInfoResult$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/GetGroupMemberInfoResult$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupMemberInfoResult;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/GetGroupMemberInfoResult;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetGroupMemberInfoResult$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetGroupMemberListApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/GetGroupMemberListApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupMemberListApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetGroupMemberListApi$Factory {
	public final fun create (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/GetGroupMemberListApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetImageApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/GetImageApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/GetImageApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetImageApi$Factory {
	public final fun create (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/GetImageApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetImageResult {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/GetImageResult$Companion;
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/GetImageResult;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/api/GetImageResult;Ljava/lang/String;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/GetImageResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFile ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/api/GetImageResult$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/GetImageResult$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/GetImageResult;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/GetImageResult;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetImageResult$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetLoginInfoApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/GetLoginInfoApi$Factory;
	public static final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/GetLoginInfoApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetLoginInfoApi$Factory {
	public final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/GetLoginInfoApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetLoginInfoResult {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/GetLoginInfoResult$Companion;
	public final fun component1 ()Llove/forte/simbot/common/id/LongID;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Llove/forte/simbot/common/id/LongID;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/GetLoginInfoResult;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/api/GetLoginInfoResult;Llove/forte/simbot/common/id/LongID;Ljava/lang/String;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/GetLoginInfoResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getNickname ()Ljava/lang/String;
	public final fun getUserId ()Llove/forte/simbot/common/id/LongID;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/api/GetLoginInfoResult$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/GetLoginInfoResult$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/GetLoginInfoResult;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/GetLoginInfoResult;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetLoginInfoResult$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetMsgApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/GetMsgApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/GetMsgApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetMsgApi$Factory {
	public final fun create (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/GetMsgApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetMsgResult {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/GetMsgResult$Companion;
	public final fun component1 ()I
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Llove/forte/simbot/common/id/IntID;
	public final fun component4 ()Llove/forte/simbot/common/id/IntID;
	public final fun component5 ()Lkotlinx/serialization/json/JsonObject;
	public final fun component6 ()Ljava/util/List;
	public final fun copy (ILjava/lang/String;Llove/forte/simbot/common/id/IntID;Llove/forte/simbot/common/id/IntID;Lkotlinx/serialization/json/JsonObject;Ljava/util/List;)Llove/forte/simbot/component/onebot/v11/core/api/GetMsgResult;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/api/GetMsgResult;ILjava/lang/String;Llove/forte/simbot/common/id/IntID;Llove/forte/simbot/common/id/IntID;Lkotlinx/serialization/json/JsonObject;Ljava/util/List;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/GetMsgResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMessage ()Ljava/util/List;
	public final fun getMessageId ()Llove/forte/simbot/common/id/IntID;
	public final fun getMessageType ()Ljava/lang/String;
	public final fun getRealId ()Llove/forte/simbot/common/id/IntID;
	public final fun getTime ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/api/GetMsgResult$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/GetMsgResult$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/GetMsgResult;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/GetMsgResult;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetMsgResult$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetRecordApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/GetRecordApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Ljava/lang/String;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/GetRecordApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetRecordApi$Factory {
	public final fun create (Ljava/lang/String;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/GetRecordApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetRecordResult {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/GetRecordResult$Companion;
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/GetRecordResult;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/api/GetRecordResult;Ljava/lang/String;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/GetRecordResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFile ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/api/GetRecordResult$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/GetRecordResult$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/GetRecordResult;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/GetRecordResult;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetRecordResult$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetStatusApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/GetStatusApi$Factory;
	public static final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/GetStatusApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetStatusApi$Factory {
	public final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/GetStatusApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetStrangerInfoApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/GetStrangerInfoApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/GetStrangerInfoApi;
	public static final fun create (Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/GetStrangerInfoApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetStrangerInfoApi$Factory {
	public final fun create (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/GetStrangerInfoApi;
	public final fun create (Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/GetStrangerInfoApi;
	public static synthetic fun create$default (Llove/forte/simbot/component/onebot/v11/core/api/GetStrangerInfoApi$Factory;Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/GetStrangerInfoApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetStrangerInfoResult {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/GetStrangerInfoResult$Companion;
	public final fun component1 ()Llove/forte/simbot/common/id/LongID;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()I
	public final fun copy (Llove/forte/simbot/common/id/LongID;Ljava/lang/String;Ljava/lang/String;I)Llove/forte/simbot/component/onebot/v11/core/api/GetStrangerInfoResult;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/api/GetStrangerInfoResult;Llove/forte/simbot/common/id/LongID;Ljava/lang/String;Ljava/lang/String;IILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/GetStrangerInfoResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAge ()I
	public final fun getNickname ()Ljava/lang/String;
	public final fun getSex ()Ljava/lang/String;
	public final fun getUserId ()Llove/forte/simbot/common/id/LongID;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/api/GetStrangerInfoResult$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/GetStrangerInfoResult$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/GetStrangerInfoResult;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/GetStrangerInfoResult;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetStrangerInfoResult$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetVersionInfoApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/GetVersionInfoApi$Factory;
	public static final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/GetVersionInfoApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetVersionInfoApi$Factory {
	public final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/GetVersionInfoApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetVersionInfoResult {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/GetVersionInfoResult$Companion;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/GetVersionInfoResult;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/api/GetVersionInfoResult;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/GetVersionInfoResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAppName ()Ljava/lang/String;
	public final fun getAppVersion ()Ljava/lang/String;
	public final fun getProtocolVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/api/GetVersionInfoResult$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/GetVersionInfoResult$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/GetVersionInfoResult;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/GetVersionInfoResult;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/GetVersionInfoResult$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/api/OneBotApi : love/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi {
	public fun deserialize (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiResult;
	public abstract fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getMethod ()Lio/ktor/http/HttpMethod;
	public abstract fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/OneBotApi$Actions {
	public static final field ASYNC_SUFFIX Ljava/lang/String;
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/OneBotApi$Actions;
	public static final field RATE_LIMITED_SUFFIX Ljava/lang/String;
}

public class love/forte/simbot/component/onebot/v11/core/api/OneBotApiException : java/lang/RuntimeException {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun <init> (Ljava/lang/Throwable;)V
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/api/OneBotApiExecutable {
	public abstract synthetic fun execute (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun executeAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;)Ljava/util/concurrent/CompletableFuture;
	public fun executeBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;)Lio/ktor/client/statement/HttpResponse;
	public abstract synthetic fun executeData (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun executeDataAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;)Ljava/util/concurrent/CompletableFuture;
	public fun executeDataBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;)Ljava/lang/Object;
	public fun executeDataReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract synthetic fun executeRaw (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun executeRawAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;)Ljava/util/concurrent/CompletableFuture;
	public fun executeRawBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;)Ljava/lang/String;
	public fun executeRawReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public fun executeReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract synthetic fun executeResult (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun executeResultAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;)Ljava/util/concurrent/CompletableFuture;
	public fun executeResultBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiResult;
	public fun executeResultReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
}

public final class love/forte/simbot/component/onebot/v11/core/api/OneBotApiExecutableKt {
	public static final fun inExecutableScope (Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiExecutable;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun withExecutableScope (Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiExecutable;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class love/forte/simbot/component/onebot/v11/core/api/OneBotApiExecutableScope {
	public static final synthetic fun box-impl (Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiExecutable;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiExecutableScope;
	public static fun constructor-impl (Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiExecutable;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiExecutable;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiExecutable;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiExecutable;Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiExecutable;)Z
	public static final fun execute-impl (Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiExecutable;Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun executeData-impl (Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiExecutable;Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun executeRaw-impl (Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiExecutable;Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun executeResult-impl (Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiExecutable;Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun hashCode ()I
	public static fun hashCode-impl (Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiExecutable;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiExecutable;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiExecutable;
}

public final class love/forte/simbot/component/onebot/v11/core/api/OneBotApiKt {
	public static final fun resolveUrl (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/http/URLBuilder;Ljava/util/Collection;)V
}

public final class love/forte/simbot/component/onebot/v11/core/api/OneBotApiRequests {
	public static final fun getApiLogger ()Lorg/slf4j/Logger;
	public static final synthetic fun request (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final synthetic fun request (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun request$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun request$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun requestAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Lkotlinx/coroutines/CoroutineScope;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Lkotlinx/coroutines/CoroutineScope;)Ljava/util/concurrent/CompletableFuture;
	public static synthetic fun requestAsync$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Lkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
	public static synthetic fun requestAsync$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Lkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;)Lio/ktor/client/statement/HttpResponse;
	public static final fun requestBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;)Lio/ktor/client/statement/HttpResponse;
	public static final fun requestBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;)Lio/ktor/client/statement/HttpResponse;
	public static final fun requestBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;)Lio/ktor/client/statement/HttpResponse;
	public static final fun requestBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;)Lio/ktor/client/statement/HttpResponse;
	public static final fun requestBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)Lio/ktor/client/statement/HttpResponse;
	public static synthetic fun requestBlocking$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;ILjava/lang/Object;)Lio/ktor/client/statement/HttpResponse;
	public static synthetic fun requestBlocking$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;ILjava/lang/Object;)Lio/ktor/client/statement/HttpResponse;
	public static final synthetic fun requestData (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/serialization/json/Json;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final synthetic fun requestData (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/serialization/json/Json;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun requestData$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/serialization/json/Json;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun requestData$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/serialization/json/Json;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun requestDataAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestDataAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestDataAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestDataAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestDataAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestDataAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/serialization/json/Json;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestDataAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestDataAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestDataAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestDataAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestDataAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestDataAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/serialization/json/Json;)Ljava/util/concurrent/CompletableFuture;
	public static synthetic fun requestDataAsync$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/serialization/json/Json;ILjava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
	public static synthetic fun requestDataAsync$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/serialization/json/Json;ILjava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestDataBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;)Ljava/lang/Object;
	public static final fun requestDataBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;)Ljava/lang/Object;
	public static final fun requestDataBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;)Ljava/lang/Object;
	public static final fun requestDataBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;)Ljava/lang/Object;
	public static final fun requestDataBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/serialization/json/Json;)Ljava/lang/Object;
	public static final fun requestDataBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;)Ljava/lang/Object;
	public static final fun requestDataBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
	public static final fun requestDataBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)Ljava/lang/Object;
	public static final fun requestDataBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;)Ljava/lang/Object;
	public static final fun requestDataBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/serialization/json/Json;)Ljava/lang/Object;
	public static synthetic fun requestDataBlocking$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/serialization/json/Json;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun requestDataBlocking$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/serialization/json/Json;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun requestDataReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestDataReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestDataReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestDataReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestDataReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestDataReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/serialization/json/Json;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestDataReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestDataReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestDataReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestDataReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestDataReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestDataReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/serialization/json/Json;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static synthetic fun requestDataReserve$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/serialization/json/Json;ILjava/lang/Object;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static synthetic fun requestDataReserve$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/serialization/json/Json;ILjava/lang/Object;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final synthetic fun requestRaw (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final synthetic fun requestRaw (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun requestRaw$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun requestRaw$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun requestRawAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestRawAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestRawAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestRawAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestRawAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestRawAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestRawAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestRawAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestRawAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestRawAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;)Ljava/util/concurrent/CompletableFuture;
	public static synthetic fun requestRawAsync$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
	public static synthetic fun requestRawAsync$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestRawBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;)Ljava/lang/String;
	public static final fun requestRawBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;)Ljava/lang/String;
	public static final fun requestRawBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;)Ljava/lang/String;
	public static final fun requestRawBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;)Ljava/lang/String;
	public static final fun requestRawBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;)Ljava/lang/String;
	public static final fun requestRawBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public static final fun requestRawBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)Ljava/lang/String;
	public static final fun requestRawBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;)Ljava/lang/String;
	public static synthetic fun requestRawBlocking$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;ILjava/lang/Object;)Ljava/lang/String;
	public static synthetic fun requestRawBlocking$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;ILjava/lang/Object;)Ljava/lang/String;
	public static final fun requestRawReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestRawReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestRawReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestRawReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestRawReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestRawReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestRawReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestRawReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestRawReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestRawReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static synthetic fun requestRawReserve$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static synthetic fun requestRawReserve$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Lkotlinx/coroutines/CoroutineScope;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Lkotlinx/coroutines/CoroutineScope;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static synthetic fun requestReserve$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Lkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static synthetic fun requestReserve$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Lkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final synthetic fun requestResult (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/serialization/json/Json;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final synthetic fun requestResult (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/serialization/json/Json;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun requestResult$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/serialization/json/Json;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun requestResult$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/serialization/json/Json;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun requestResultAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestResultAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestResultAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestResultAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestResultAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestResultAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/serialization/json/Json;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestResultAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestResultAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestResultAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestResultAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestResultAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestResultAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/serialization/json/Json;)Ljava/util/concurrent/CompletableFuture;
	public static synthetic fun requestResultAsync$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/serialization/json/Json;ILjava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
	public static synthetic fun requestResultAsync$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/serialization/json/Json;ILjava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestResultBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiResult;
	public static final fun requestResultBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiResult;
	public static final fun requestResultBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiResult;
	public static final fun requestResultBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiResult;
	public static final fun requestResultBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/serialization/json/Json;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiResult;
	public static final fun requestResultBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiResult;
	public static final fun requestResultBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiResult;
	public static final fun requestResultBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiResult;
	public static final fun requestResultBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiResult;
	public static final fun requestResultBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/serialization/json/Json;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiResult;
	public static synthetic fun requestResultBlocking$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/serialization/json/Json;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiResult;
	public static synthetic fun requestResultBlocking$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/serialization/json/Json;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiResult;
	public static final fun requestResultReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestResultReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestResultReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestResultReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestResultReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestResultReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/serialization/json/Json;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestResultReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestResultReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestResultReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestResultReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestResultReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun requestResultReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/serialization/json/Json;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static synthetic fun requestResultReserve$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/serialization/json/Json;ILjava/lang/Object;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static synthetic fun requestResultReserve$default (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Lio/ktor/client/HttpClient;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/nio/charset/Charset;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/serialization/json/Json;ILjava/lang/Object;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
}

public class love/forte/simbot/component/onebot/v11/core/api/OneBotApiResponseNotSuccessException : love/forte/simbot/component/onebot/v11/core/api/OneBotApiException {
	public fun <init> (Lio/ktor/http/HttpStatusCode;Ljava/lang/String;Ljava/lang/Throwable;)V
	public synthetic fun <init> (Lio/ktor/http/HttpStatusCode;Ljava/lang/String;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getStatus ()Lio/ktor/http/HttpStatusCode;
}

public final class love/forte/simbot/component/onebot/v11/core/api/OneBotApiResult {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiResult$Companion;
	public static final field RETCODE_ASYNC I
	public static final field RETCODE_SUCCESS I
	public fun <init> (ILjava/lang/String;Ljava/lang/Object;)V
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/Object;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()I
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/Object;
	public final fun copy (ILjava/lang/String;Ljava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiResult;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiResult;ILjava/lang/String;Ljava/lang/Object;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ljava/lang/Object;
	public final fun getDataOrThrow ()Ljava/lang/Object;
	public final fun getRaw ()Ljava/lang/String;
	public final fun getRetcode ()I
	public final fun getStatus ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isSuccess ()Z
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/api/OneBotApiResult$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public fun <init> (Lkotlinx/serialization/KSerializer;)V
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiResult;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiResult;)V
	public final fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/OneBotApiResult$Companion {
	public final fun emptySerializer ()Lkotlinx/serialization/KSerializer;
	public final fun serializer (Lkotlinx/serialization/KSerializer;)Lkotlinx/serialization/KSerializer;
}

public abstract class love/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$Companion;
	public static final fun create (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$StringValue;
	public static final fun create (Ljava/util/List;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$SegmentsValue;
}

public final class love/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$Companion {
	public final fun create (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$StringValue;
	public final fun create (Ljava/util/List;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$SegmentsValue;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$SegmentsValue : love/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$SegmentsValue$Companion;
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$SegmentsValue;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$SegmentsValue;Ljava/util/List;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$SegmentsValue;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getSegments ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$SegmentsValue$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$SegmentsValue$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$SegmentsValue;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$SegmentsValue;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$SegmentsValue$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$StringValue : love/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$StringValue$Companion;
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$StringValue;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$StringValue;Ljava/lang/String;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$StringValue;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$StringValue$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$StringValue$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$StringValue;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$StringValue;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing$StringValue$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoingSerializer : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoingSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;)V
}

public final class love/forte/simbot/component/onebot/v11/core/api/SendGroupMsgApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/SendGroupMsgApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;)Llove/forte/simbot/component/onebot/v11/core/api/SendGroupMsgApi;
	public static final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/SendGroupMsgApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SendGroupMsgApi$Factory {
	public final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;)Llove/forte/simbot/component/onebot/v11/core/api/SendGroupMsgApi;
	public final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/SendGroupMsgApi;
	public static synthetic fun create$default (Llove/forte/simbot/component/onebot/v11/core/api/SendGroupMsgApi$Factory;Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;Ljava/lang/Boolean;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/SendGroupMsgApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SendLikeApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/SendLikeApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/SendLikeApi;
	public static final fun create (Llove/forte/simbot/common/id/ID;Ljava/lang/Integer;)Llove/forte/simbot/component/onebot/v11/core/api/SendLikeApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SendLikeApi$Factory {
	public final fun create (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/SendLikeApi;
	public final fun create (Llove/forte/simbot/common/id/ID;Ljava/lang/Integer;)Llove/forte/simbot/component/onebot/v11/core/api/SendLikeApi;
	public static synthetic fun create$default (Llove/forte/simbot/component/onebot/v11/core/api/SendLikeApi$Factory;Llove/forte/simbot/common/id/ID;Ljava/lang/Integer;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/SendLikeApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SendMsgApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/SendMsgApi$Factory;
	public static final field MESSAGE_TYPE_GROUP Ljava/lang/String;
	public static final field MESSAGE_TYPE_PRIVATE Ljava/lang/String;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Ljava/lang/String;Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;)Llove/forte/simbot/component/onebot/v11/core/api/SendMsgApi;
	public static final fun create (Ljava/lang/String;Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/SendMsgApi;
	public static final fun createGroup (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;)Llove/forte/simbot/component/onebot/v11/core/api/SendMsgApi;
	public static final fun createGroup (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/SendMsgApi;
	public static final fun createPrivate (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;)Llove/forte/simbot/component/onebot/v11/core/api/SendMsgApi;
	public static final fun createPrivate (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/SendMsgApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SendMsgApi$Factory {
	public final fun create (Ljava/lang/String;Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;)Llove/forte/simbot/component/onebot/v11/core/api/SendMsgApi;
	public final fun create (Ljava/lang/String;Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/SendMsgApi;
	public static synthetic fun create$default (Llove/forte/simbot/component/onebot/v11/core/api/SendMsgApi$Factory;Ljava/lang/String;Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;Ljava/lang/Boolean;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/SendMsgApi;
	public final fun createGroup (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;)Llove/forte/simbot/component/onebot/v11/core/api/SendMsgApi;
	public final fun createGroup (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/SendMsgApi;
	public static synthetic fun createGroup$default (Llove/forte/simbot/component/onebot/v11/core/api/SendMsgApi$Factory;Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;Ljava/lang/Boolean;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/SendMsgApi;
	public final fun createPrivate (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;)Llove/forte/simbot/component/onebot/v11/core/api/SendMsgApi;
	public final fun createPrivate (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/SendMsgApi;
	public static synthetic fun createPrivate$default (Llove/forte/simbot/component/onebot/v11/core/api/SendMsgApi$Factory;Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;Ljava/lang/Boolean;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/SendMsgApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SendMsgResult {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/SendMsgResult$Companion;
	public final fun component1 ()Llove/forte/simbot/common/id/IntID;
	public final fun copy (Llove/forte/simbot/common/id/IntID;)Llove/forte/simbot/component/onebot/v11/core/api/SendMsgResult;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/api/SendMsgResult;Llove/forte/simbot/common/id/IntID;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/SendMsgResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMessageId ()Llove/forte/simbot/common/id/IntID;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/api/SendMsgResult$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/SendMsgResult$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/SendMsgResult;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/SendMsgResult;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SendMsgResult$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SendPrivateMsgApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/SendPrivateMsgApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;)Llove/forte/simbot/component/onebot/v11/core/api/SendPrivateMsgApi;
	public static final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;Z)Llove/forte/simbot/component/onebot/v11/core/api/SendPrivateMsgApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SendPrivateMsgApi$Factory {
	public final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;)Llove/forte/simbot/component/onebot/v11/core/api/SendPrivateMsgApi;
	public final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;Z)Llove/forte/simbot/component/onebot/v11/core/api/SendPrivateMsgApi;
	public static synthetic fun create$default (Llove/forte/simbot/component/onebot/v11/core/api/SendPrivateMsgApi$Factory;Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;ZILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/SendPrivateMsgApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetFriendAddRequestApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/SetFriendAddRequestApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/SetFriendAddRequestApi;
	public static final fun create (Ljava/lang/String;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/SetFriendAddRequestApi;
	public static final fun create (Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/SetFriendAddRequestApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetFriendAddRequestApi$Factory {
	public final fun create (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/SetFriendAddRequestApi;
	public final fun create (Ljava/lang/String;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/SetFriendAddRequestApi;
	public final fun create (Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/SetFriendAddRequestApi;
	public static synthetic fun create$default (Llove/forte/simbot/component/onebot/v11/core/api/SetFriendAddRequestApi$Factory;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/SetFriendAddRequestApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetGroupAddRequestApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAddRequestApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Ljava/lang/String;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAddRequestApi;
	public static final fun create (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAddRequestApi;
	public static final fun create (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAddRequestApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetGroupAddRequestApi$Factory {
	public final fun create (Ljava/lang/String;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAddRequestApi;
	public final fun create (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAddRequestApi;
	public final fun create (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAddRequestApi;
	public static synthetic fun create$default (Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAddRequestApi$Factory;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAddRequestApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetGroupAdminApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAdminApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAdminApi;
	public static final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAdminApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetGroupAdminApi$Factory {
	public final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAdminApi;
	public final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAdminApi;
	public static synthetic fun create$default (Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAdminApi$Factory;Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAdminApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetGroupAnonymousApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAnonymousApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAnonymousApi;
	public static final fun create (Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAnonymousApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetGroupAnonymousApi$Factory {
	public final fun create (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAnonymousApi;
	public final fun create (Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAnonymousApi;
	public static synthetic fun create$default (Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAnonymousApi$Factory;Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAnonymousApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetGroupAnonymousBanApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAnonymousBanApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/common/id/ID;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAnonymousBanApi;
	public static final fun create (Llove/forte/simbot/common/id/ID;Ljava/lang/String;Ljava/lang/Long;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAnonymousBanApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetGroupAnonymousBanApi$Factory {
	public final fun create (Llove/forte/simbot/common/id/ID;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAnonymousBanApi;
	public final fun create (Llove/forte/simbot/common/id/ID;Ljava/lang/String;Ljava/lang/Long;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAnonymousBanApi;
	public static synthetic fun create$default (Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAnonymousBanApi$Factory;Llove/forte/simbot/common/id/ID;Ljava/lang/String;Ljava/lang/Long;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupAnonymousBanApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetGroupBanApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/SetGroupBanApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupBanApi;
	public static final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Ljava/lang/Long;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupBanApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetGroupBanApi$Factory {
	public final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupBanApi;
	public final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Ljava/lang/Long;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupBanApi;
	public static synthetic fun create$default (Llove/forte/simbot/component/onebot/v11/core/api/SetGroupBanApi$Factory;Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Ljava/lang/Long;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupBanApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetGroupCardApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/SetGroupCardApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupCardApi;
	public static final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupCardApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetGroupCardApi$Factory {
	public final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupCardApi;
	public final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupCardApi;
	public static synthetic fun create$default (Llove/forte/simbot/component/onebot/v11/core/api/SetGroupCardApi$Factory;Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Ljava/lang/String;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupCardApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetGroupKickApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/SetGroupKickApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupKickApi;
	public static final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupKickApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetGroupKickApi$Factory {
	public final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupKickApi;
	public final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupKickApi;
	public static synthetic fun create$default (Llove/forte/simbot/component/onebot/v11/core/api/SetGroupKickApi$Factory;Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupKickApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetGroupLeaveApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/SetGroupLeaveApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupLeaveApi;
	public static final fun create (Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupLeaveApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetGroupLeaveApi$Factory {
	public final fun create (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupLeaveApi;
	public final fun create (Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupLeaveApi;
	public static synthetic fun create$default (Llove/forte/simbot/component/onebot/v11/core/api/SetGroupLeaveApi$Factory;Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupLeaveApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetGroupNameApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/SetGroupNameApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/common/id/ID;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupNameApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetGroupNameApi$Factory {
	public final fun create (Llove/forte/simbot/common/id/ID;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupNameApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetGroupSpecialTitleApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/SetGroupSpecialTitleApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupSpecialTitleApi;
	public static final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupSpecialTitleApi;
	public static final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Ljava/lang/String;Ljava/lang/Long;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupSpecialTitleApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetGroupSpecialTitleApi$Factory {
	public final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupSpecialTitleApi;
	public final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupSpecialTitleApi;
	public final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Ljava/lang/String;Ljava/lang/Long;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupSpecialTitleApi;
	public static synthetic fun create$default (Llove/forte/simbot/component/onebot/v11/core/api/SetGroupSpecialTitleApi$Factory;Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Ljava/lang/String;Ljava/lang/Long;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupSpecialTitleApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetGroupWholeBanApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/SetGroupWholeBanApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupWholeBanApi;
	public static final fun create (Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupWholeBanApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetGroupWholeBanApi$Factory {
	public final fun create (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupWholeBanApi;
	public final fun create (Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupWholeBanApi;
	public static synthetic fun create$default (Llove/forte/simbot/component/onebot/v11/core/api/SetGroupWholeBanApi$Factory;Llove/forte/simbot/common/id/ID;Ljava/lang/Boolean;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/SetGroupWholeBanApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetRestartApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/SetRestartApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/SetRestartApi;
	public static final fun create (Ljava/lang/Long;)Llove/forte/simbot/component/onebot/v11/core/api/SetRestartApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/SetRestartApi$Factory {
	public final fun create ()Llove/forte/simbot/component/onebot/v11/core/api/SetRestartApi;
	public final fun create (Ljava/lang/Long;)Llove/forte/simbot/component/onebot/v11/core/api/SetRestartApi;
	public static synthetic fun create$default (Llove/forte/simbot/component/onebot/v11/core/api/SetRestartApi$Factory;Ljava/lang/Long;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/SetRestartApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/nonstandard/SendGroupForwardMsgApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/nonstandard/SendGroupForwardMsgApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;)Llove/forte/simbot/component/onebot/v11/core/api/nonstandard/SendGroupForwardMsgApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/nonstandard/SendGroupForwardMsgApi$Factory {
	public final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;)Llove/forte/simbot/component/onebot/v11/core/api/nonstandard/SendGroupForwardMsgApi;
}

public final class love/forte/simbot/component/onebot/v11/core/api/nonstandard/SendGroupForwardMsgResult {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/api/nonstandard/SendGroupForwardMsgResult$Companion;
	public final fun component1 ()Llove/forte/simbot/common/id/IntID;
	public final fun component2 ()Llove/forte/simbot/common/id/StringID;
	public final fun copy (Llove/forte/simbot/common/id/IntID;Llove/forte/simbot/common/id/StringID;)Llove/forte/simbot/component/onebot/v11/core/api/nonstandard/SendGroupForwardMsgResult;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/api/nonstandard/SendGroupForwardMsgResult;Llove/forte/simbot/common/id/IntID;Llove/forte/simbot/common/id/StringID;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/nonstandard/SendGroupForwardMsgResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getForwardId ()Llove/forte/simbot/common/id/StringID;
	public final fun getMessageId ()Llove/forte/simbot/common/id/IntID;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/api/nonstandard/SendGroupForwardMsgResult$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/api/nonstandard/SendGroupForwardMsgResult$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/api/nonstandard/SendGroupForwardMsgResult;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/api/nonstandard/SendGroupForwardMsgResult;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/nonstandard/SendGroupForwardMsgResult$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/api/nonstandard/SendPrivateForwardMsgApi : love/forte/simbot/component/onebot/v11/core/api/OneBotApi {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/api/nonstandard/SendPrivateForwardMsgApi$Factory;
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;)Llove/forte/simbot/component/onebot/v11/core/api/nonstandard/SendPrivateForwardMsgApi;
	public fun getAction ()Ljava/lang/String;
	public fun getApiResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
	public fun getBody ()Ljava/lang/Object;
	public fun getResultDeserializer ()Lkotlinx/serialization/DeserializationStrategy;
}

public final class love/forte/simbot/component/onebot/v11/core/api/nonstandard/SendPrivateForwardMsgApi$Factory {
	public final fun create (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/component/onebot/v11/core/api/OneBotMessageOutgoing;)Llove/forte/simbot/component/onebot/v11/core/api/nonstandard/SendPrivateForwardMsgApi;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/bot/OneBotBot : love/forte/simbot/bot/Bot, love/forte/simbot/component/onebot/v11/core/api/OneBotApiExecutable {
	public synthetic fun getAccessToken ()Ljava/lang/String;
	public abstract fun getApiAccessToken ()Ljava/lang/String;
	public abstract fun getApiClient ()Lio/ktor/client/HttpClient;
	public abstract fun getApiHost ()Lio/ktor/http/Url;
	public abstract fun getConfiguration ()Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotConfiguration;
	public abstract fun getContactRelation ()Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotFriendRelation;
	public abstract synthetic fun getCookies (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getCookies$default (Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun getCookiesAsync (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public static synthetic fun getCookiesAsync$default (Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
	public fun getCookiesBlocking (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/GetCookiesResult;
	public static synthetic fun getCookiesBlocking$default (Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Ljava/lang/String;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/GetCookiesResult;
	public fun getCookiesReserve (Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static synthetic fun getCookiesReserve$default (Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Ljava/lang/String;ILjava/lang/Object;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public abstract synthetic fun getCredentials (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getCredentials$default (Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun getCredentialsAsync (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public static synthetic fun getCredentialsAsync$default (Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
	public fun getCredentialsBlocking (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/GetCredentialsResult;
	public static synthetic fun getCredentialsBlocking$default (Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Ljava/lang/String;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/api/GetCredentialsResult;
	public fun getCredentialsReserve (Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static synthetic fun getCredentialsReserve$default (Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Ljava/lang/String;ILjava/lang/Object;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract synthetic fun getCsrfToken (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCsrfTokenAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getCsrfTokenBlocking ()Llove/forte/simbot/component/onebot/v11/core/api/GetCsrfTokenResult;
	public fun getCsrfTokenReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract fun getDecoderJson ()Lkotlinx/serialization/json/Json;
	public abstract fun getEventAccessToken ()Ljava/lang/String;
	public abstract fun getGroupRelation ()Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotGroupRelation;
	public fun getGuildRelation ()Llove/forte/simbot/bot/GuildRelation;
	public abstract fun getId ()Llove/forte/simbot/common/id/ID;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getUserId ()Llove/forte/simbot/common/id/ID;
	public abstract fun isMe (Llove/forte/simbot/common/id/ID;)Z
	public synthetic fun messageFromIdBlocking (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/message/MessageContent;
	public synthetic fun messageFromReferenceBlocking (Llove/forte/simbot/message/MessageReference;)Llove/forte/simbot/message/MessageContent;
	public abstract fun push (Ljava/lang/String;)Lkotlinx/coroutines/flow/Flow;
	public fun pushAndLaunch (Ljava/lang/String;)Lkotlinx/coroutines/Job;
	public abstract synthetic fun queryLoginInfo (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun queryLoginInfoAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun queryLoginInfoBlocking ()Llove/forte/simbot/component/onebot/v11/core/api/GetLoginInfoResult;
	public fun queryLoginInfoReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract synthetic fun start (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class love/forte/simbot/component/onebot/v11/core/bot/OneBotBotConfiguration {
	public fun <init> ()V
	public final fun accessToken (Ljava/lang/String;)V
	public final fun apiClientConfigurer (Llove/forte/simbot/common/function/ConfigurerFunction;)Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotConfiguration;
	public final fun getAccessToken ()Ljava/lang/String;
	public final fun getApiAccessToken ()Ljava/lang/String;
	public final fun getApiClientConfigurer ()Llove/forte/simbot/common/function/ConfigurerFunction;
	public final fun getApiClientEngine ()Lio/ktor/client/engine/HttpClientEngine;
	public final fun getApiClientEngineFactory ()Lio/ktor/client/engine/HttpClientEngineFactory;
	public final fun getApiHttpConnectTimeoutMillis ()Ljava/lang/Long;
	public final fun getApiHttpRequestTimeoutMillis ()Ljava/lang/Long;
	public final fun getApiHttpSocketTimeoutMillis ()Ljava/lang/Long;
	public final fun getApiServerHost ()Lio/ktor/http/Url;
	public final fun getBotUniqueId ()Ljava/lang/String;
	public final fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getEventAccessToken ()Ljava/lang/String;
	public final fun getEventServerHost ()Lio/ktor/http/Url;
	public final fun getSerializersModule ()Lkotlinx/serialization/modules/SerializersModule;
	public final fun getWsClientEngine ()Lio/ktor/client/engine/HttpClientEngine;
	public final fun getWsClientEngineFactory ()Lio/ktor/client/engine/HttpClientEngineFactory;
	public final fun getWsConnectMaxRetryTimes ()I
	public final fun getWsConnectRetryDelayMillis ()J
	public final fun setAccessToken (Ljava/lang/String;)V
	public final fun setApiAccessToken (Ljava/lang/String;)V
	public final fun setApiClientConfigurer (Llove/forte/simbot/common/function/ConfigurerFunction;)V
	public final fun setApiClientEngine (Lio/ktor/client/engine/HttpClientEngine;)V
	public final fun setApiClientEngineFactory (Lio/ktor/client/engine/HttpClientEngineFactory;)V
	public final fun setApiHttpConnectTimeoutMillis (Ljava/lang/Long;)V
	public final fun setApiHttpRequestTimeoutMillis (Ljava/lang/Long;)V
	public final fun setApiHttpSocketTimeoutMillis (Ljava/lang/Long;)V
	public final fun setApiServerHost (Lio/ktor/http/Url;)V
	public final fun setApiServerHost (Ljava/lang/String;)V
	public final fun setBotUniqueId (Ljava/lang/String;)V
	public final fun setCoroutineContext (Lkotlin/coroutines/CoroutineContext;)V
	public final fun setEventAccessToken (Ljava/lang/String;)V
	public final fun setEventServerHost (Lio/ktor/http/Url;)V
	public final fun setEventServerHost (Ljava/lang/String;)V
	public final fun setSerializersModule (Lkotlinx/serialization/modules/SerializersModule;)V
	public final fun setWsClientEngine (Lio/ktor/client/engine/HttpClientEngine;)V
	public final fun setWsClientEngineFactory (Lio/ktor/client/engine/HttpClientEngineFactory;)V
	public final fun setWsConnectMaxRetryTimes (I)V
	public final fun setWsConnectRetryDelayMillis (J)V
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/bot/OneBotBotFriendRelation : love/forte/simbot/bot/ContactRelation {
	public synthetic fun contact (Llove/forte/simbot/common/id/ID;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun contactCount (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getContact (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/actor/OneBotFriend;
	public synthetic fun getContact (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/definition/Contact;
	public fun getContactAsync (Llove/forte/simbot/common/id/ID;)Ljava/util/concurrent/CompletableFuture;
	public fun getContactReserve (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract fun getContacts ()Llove/forte/simbot/common/collectable/Collectable;
	public fun getStranger (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/actor/OneBotStranger;
	public fun getStrangerAsync (Llove/forte/simbot/common/id/ID;)Ljava/util/concurrent/CompletableFuture;
	public fun getStrangerReserve (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract synthetic fun stranger (Llove/forte/simbot/common/id/ID;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/bot/OneBotBotGroupRelation : love/forte/simbot/bot/GroupRelation {
	public fun getGroup (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getGroup (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/definition/ChatGroup;
	public fun getGroupAsync (Llove/forte/simbot/common/id/ID;)Ljava/util/concurrent/CompletableFuture;
	public fun getGroupReserve (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract fun getGroups ()Llove/forte/simbot/common/collectable/Collectable;
	public fun getMember (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;
	public fun getMemberAsync (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;)Ljava/util/concurrent/CompletableFuture;
	public fun getMemberReserve (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract synthetic fun group (Llove/forte/simbot/common/id/ID;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun groupCount (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract synthetic fun member (Llove/forte/simbot/common/id/ID;Llove/forte/simbot/common/id/ID;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class love/forte/simbot/component/onebot/v11/core/bot/OneBotBotManager : love/forte/simbot/bot/JobBasedBotManager, love/forte/simbot/bot/BotManager {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotManager$Factory;
	public fun <init> ()V
	public abstract fun all ()Lkotlin/sequences/Sequence;
	public fun configurable (Llove/forte/simbot/bot/SerializableBotConfiguration;)Z
	public abstract fun find (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;
	public abstract fun get (Llove/forte/simbot/common/id/ID;)Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;
	public synthetic fun register (Llove/forte/simbot/bot/SerializableBotConfiguration;)Llove/forte/simbot/bot/Bot;
	public fun register (Llove/forte/simbot/bot/SerializableBotConfiguration;)Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;
	public abstract fun register (Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotConfiguration;)Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;
}

public final class love/forte/simbot/component/onebot/v11/core/bot/OneBotBotManager$Factory : love/forte/simbot/bot/BotManagerFactory {
	public synthetic fun create (Ljava/lang/Object;Llove/forte/simbot/common/function/ConfigurerFunction;)Ljava/lang/Object;
	public fun create (Llove/forte/simbot/plugin/PluginConfigureContext;Llove/forte/simbot/common/function/ConfigurerFunction;)Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotManager;
	public synthetic fun getKey ()Llove/forte/simbot/common/function/MergeableFactory$Key;
	public fun getKey ()Llove/forte/simbot/plugin/PluginFactory$Key;
}

public final class love/forte/simbot/component/onebot/v11/core/bot/OneBotBotManagerConfiguration {
	public fun <init> ()V
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/bot/OneBotBotManagerFactoryConfigurerProvider : love/forte/simbot/plugin/PluginFactoryConfigurerProvider {
}

public final class love/forte/simbot/component/onebot/v11/core/bot/OneBotBotManagerFactoryProvider : love/forte/simbot/plugin/PluginFactoryProvider {
	public fun <init> ()V
	public fun loadConfigures ()Lkotlin/sequences/Sequence;
	public fun provide ()Llove/forte/simbot/plugin/PluginFactory;
}

public final class love/forte/simbot/component/onebot/v11/core/bot/OneBotBotManagerKt {
	public static final fun register (Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotManager;Lkotlin/jvm/functions/Function1;)Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;
}

public final class love/forte/simbot/component/onebot/v11/core/bot/OneBotBotManagerUsageKt {
	public static final fun filterIsOneBotBotManagers (Ljava/lang/Iterable;)Ljava/util/List;
	public static final fun filterIsOneBotBotManagers (Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;
	public static final fun firstOneBotBotManager (Ljava/lang/Iterable;)Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotManager;
	public static final fun firstOneBotBotManager (Lkotlin/sequences/Sequence;)Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotManager;
	public static final fun firstOneBotBotManagerOrNull (Ljava/lang/Iterable;)Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotManager;
	public static final fun firstOneBotBotManagerOrNull (Lkotlin/sequences/Sequence;)Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotManager;
	public static final fun useOneBot11BotManager (Llove/forte/simbot/application/ApplicationFactoryConfigurer;Llove/forte/simbot/common/function/ConfigurerFunction;)V
	public static synthetic fun useOneBot11BotManager$default (Llove/forte/simbot/application/ApplicationFactoryConfigurer;Llove/forte/simbot/common/function/ConfigurerFunction;ILjava/lang/Object;)V
}

public final class love/forte/simbot/component/onebot/v11/core/bot/OneBotBotRequests {
	public static final synthetic fun requestBy (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun requestByAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestByBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;)Lio/ktor/client/statement/HttpResponse;
	public static final fun requestByReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final synthetic fun requestDataBy (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun requestDataByAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestDataByBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;)Ljava/lang/Object;
	public static final fun requestDataByReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final synthetic fun requestRawBy (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun requestRawByAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestRawByBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;)Ljava/lang/String;
	public static final fun requestRawByReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final synthetic fun requestResultBy (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun requestResultByAsync (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;)Ljava/util/concurrent/CompletableFuture;
	public static final fun requestResultByBlocking (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;)Llove/forte/simbot/component/onebot/v11/core/api/OneBotApiResult;
	public static final fun requestResultByReserve (Llove/forte/simbot/component/onebot/v11/core/api/BasicOneBotApi;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$AdditionalParams {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$AdditionalParams$Companion;
	public fun <init> ()V
	public fun <init> (ZLjava/lang/String;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Integer;)V
	public synthetic fun <init> (ZLjava/lang/String;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Integer;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/Boolean;
	public final fun component4 ()Ljava/lang/Boolean;
	public final fun component5 ()Ljava/lang/Integer;
	public final fun copy (ZLjava/lang/String;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Integer;)Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$AdditionalParams;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$AdditionalParams;ZLjava/lang/String;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Integer;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$AdditionalParams;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCache ()Ljava/lang/Boolean;
	public final fun getLocalFileToBase64 ()Z
	public final fun getProxy ()Ljava/lang/Boolean;
	public final fun getTimeout ()Ljava/lang/Integer;
	public final fun getType ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$AdditionalParams$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$AdditionalParams$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$AdditionalParams;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$AdditionalParams;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$AdditionalParams$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$Authorization {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$Authorization$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$Authorization;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$Authorization;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$Authorization;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAccessToken ()Ljava/lang/String;
	public final fun getApiAccessToken ()Ljava/lang/String;
	public final fun getApiServerHost ()Ljava/lang/String;
	public final fun getBotUniqueId ()Ljava/lang/String;
	public final fun getEventAccessToken ()Ljava/lang/String;
	public final fun getEventServerHost ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$Authorization$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$Authorization$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$Authorization;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$Authorization;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$Authorization$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$Config {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$Config$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Integer;Ljava/lang/Long;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$AdditionalParams;)V
	public synthetic fun <init> (Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Integer;Ljava/lang/Long;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$AdditionalParams;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/Long;
	public final fun component2 ()Ljava/lang/Long;
	public final fun component3 ()Ljava/lang/Long;
	public final fun component4 ()Ljava/lang/Integer;
	public final fun component5 ()Ljava/lang/Long;
	public final fun component6 ()Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$AdditionalParams;
	public final fun copy (Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Integer;Ljava/lang/Long;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$AdditionalParams;)Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$Config;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$Config;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Integer;Ljava/lang/Long;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$AdditionalParams;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$Config;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApiHttpConnectTimeoutMillis ()Ljava/lang/Long;
	public final fun getApiHttpRequestTimeoutMillis ()Ljava/lang/Long;
	public final fun getApiHttpSocketTimeoutMillis ()Ljava/lang/Long;
	public final fun getDefaultImageAdditionalParams ()Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$AdditionalParams;
	public final fun getWsConnectMaxRetryTimes ()Ljava/lang/Integer;
	public final fun getWsConnectRetryDelayMillis ()Ljava/lang/Long;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class love/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$Config$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$Config$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$Config;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$Config;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/bot/OneBotBotSerializableConfiguration$Config$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class love/forte/simbot/component/onebot/v11/core/bot/internal/OneBotBotManagerImpl$inlined$sam$i$java_util_function_BiFunction$0 : java/util/function/BiFunction {
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final synthetic fun apply (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class love/forte/simbot/component/onebot/v11/core/component/OneBot11Component : love/forte/simbot/component/onebot/common/component/OneBotComponent {
	public static final field Factory Llove/forte/simbot/component/onebot/v11/core/component/OneBot11Component$Factory;
	public static final field ID_VALUE Ljava/lang/String;
	public static final field SerializersModule Lkotlinx/serialization/modules/SerializersModule;
	public fun <init> ()V
	public fun getId ()Ljava/lang/String;
	public fun getSerializersModule ()Lkotlinx/serialization/modules/SerializersModule;
}

public final class love/forte/simbot/component/onebot/v11/core/component/OneBot11Component$Factory : love/forte/simbot/component/ComponentFactory {
	public synthetic fun create (Ljava/lang/Object;Llove/forte/simbot/common/function/ConfigurerFunction;)Ljava/lang/Object;
	public fun create (Llove/forte/simbot/component/ComponentConfigureContext;Llove/forte/simbot/common/function/ConfigurerFunction;)Llove/forte/simbot/component/onebot/v11/core/component/OneBot11Component;
	public synthetic fun getKey ()Llove/forte/simbot/common/function/MergeableFactory$Key;
	public fun getKey ()Llove/forte/simbot/component/ComponentFactory$Key;
}

public final class love/forte/simbot/component/onebot/v11/core/component/OneBot11ComponentConfiguration {
	public fun <init> ()V
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/component/OneBot11ComponentFactoryConfigurerProvider : love/forte/simbot/component/ComponentFactoryConfigurerProvider {
}

public final class love/forte/simbot/component/onebot/v11/core/component/OneBot11ComponentFactoryProvider : love/forte/simbot/component/ComponentFactoryProvider {
	public fun <init> ()V
	public fun loadConfigures ()Lkotlin/sequences/Sequence;
	public fun provide ()Llove/forte/simbot/component/ComponentFactory;
}

public final class love/forte/simbot/component/onebot/v11/core/component/OneBot11ComponentUsage {
	public static final fun useOneBot11Component (Llove/forte/simbot/application/ApplicationFactoryConfigurer;Llove/forte/simbot/common/function/ConfigurerFunction;)V
	public static synthetic fun useOneBot11Component$default (Llove/forte/simbot/application/ApplicationFactoryConfigurer;Llove/forte/simbot/common/function/ConfigurerFunction;ILjava/lang/Object;)V
}

public class love/forte/simbot/component/onebot/v11/core/event/CustomEventResolveException : java/lang/RuntimeException {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun <init> (Ljava/lang/Throwable;)V
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/CustomEventResolver$Context {
	public abstract fun getBot ()Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;
	public abstract fun getJson ()Lkotlinx/serialization/json/Json;
	public abstract fun getRawEventResolveResult ()Llove/forte/simbot/component/onebot/v11/core/event/RawEventResolveResult;
}

public class love/forte/simbot/component/onebot/v11/core/event/EventResolveException : java/lang/RuntimeException {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun <init> (Ljava/lang/Throwable;)V
}

public abstract interface annotation class love/forte/simbot/component/onebot/v11/core/event/ExperimentalCustomEventResolverApi : java/lang/annotation/Annotation {
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/OneBotBotEvent : love/forte/simbot/component/onebot/v11/core/event/OneBotEvent, love/forte/simbot/event/BotEvent {
	public abstract fun getBot ()Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/OneBotCommonEvent : love/forte/simbot/event/Event {
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/OneBotEvent : love/forte/simbot/component/onebot/v11/core/event/OneBotCommonEvent {
	public fun getPostType ()Ljava/lang/String;
	public fun getSelfId ()Llove/forte/simbot/common/id/LongID;
	public abstract fun getSourceEvent ()Llove/forte/simbot/component/onebot/v11/event/RawEvent;
	public abstract fun getSourceEventRaw ()Ljava/lang/String;
	public fun getTime ()Llove/forte/simbot/common/time/Timestamp;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/OneBotInternalEvent : love/forte/simbot/component/onebot/v11/core/event/OneBotCommonEvent, love/forte/simbot/event/InternalEvent {
}

public class love/forte/simbot/component/onebot/v11/core/event/OneBotInternalInterceptionException : love/forte/simbot/event/InternalInterceptionException {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun <init> (Ljava/lang/Throwable;)V
}

public final class love/forte/simbot/component/onebot/v11/core/event/OneBotUnknownEvent : love/forte/simbot/component/onebot/v11/core/event/OneBotEvent {
	public fun <init> (Ljava/lang/String;Llove/forte/simbot/component/onebot/v11/event/UnknownEvent;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Llove/forte/simbot/component/onebot/v11/event/UnknownEvent;
	public final fun copy (Ljava/lang/String;Llove/forte/simbot/component/onebot/v11/event/UnknownEvent;)Llove/forte/simbot/component/onebot/v11/core/event/OneBotUnknownEvent;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/event/OneBotUnknownEvent;Ljava/lang/String;Llove/forte/simbot/component/onebot/v11/event/UnknownEvent;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/event/OneBotUnknownEvent;
	public fun equals (Ljava/lang/Object;)Z
	public fun getId ()Llove/forte/simbot/common/id/ID;
	public synthetic fun getSourceEvent ()Llove/forte/simbot/component/onebot/v11/event/RawEvent;
	public fun getSourceEvent ()Llove/forte/simbot/component/onebot/v11/event/UnknownEvent;
	public fun getSourceEventRaw ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class love/forte/simbot/component/onebot/v11/core/event/OneBotUnsupportedEvent : love/forte/simbot/component/onebot/v11/core/event/OneBotEvent {
	public fun <init> (Ljava/lang/String;Llove/forte/simbot/component/onebot/v11/event/RawEvent;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Llove/forte/simbot/component/onebot/v11/event/RawEvent;
	public final fun copy (Ljava/lang/String;Llove/forte/simbot/component/onebot/v11/event/RawEvent;)Llove/forte/simbot/component/onebot/v11/core/event/OneBotUnsupportedEvent;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/event/OneBotUnsupportedEvent;Ljava/lang/String;Llove/forte/simbot/component/onebot/v11/event/RawEvent;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/event/OneBotUnsupportedEvent;
	public fun equals (Ljava/lang/Object;)Z
	public fun getId ()Llove/forte/simbot/common/id/ID;
	public fun getSourceEvent ()Llove/forte/simbot/component/onebot/v11/event/RawEvent;
	public fun getSourceEventRaw ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/message/OneBotAnonymousGroupMessageEvent : love/forte/simbot/component/onebot/v11/core/event/message/OneBotGroupMessageEvent, love/forte/simbot/event/ChatGroupMessageEvent {
	public abstract synthetic fun author (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract synthetic fun content (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getAuthor ()Llove/forte/simbot/common/id/IDContainer;
	public fun getAuthor ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;
	public synthetic fun getAuthor ()Llove/forte/simbot/definition/Actor;
	public synthetic fun getAuthor ()Llove/forte/simbot/definition/Member;
	public fun getAuthorAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getAuthorReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Actor;
	public synthetic fun getContent ()Llove/forte/simbot/definition/ChatGroup;
	public synthetic fun getContent ()Llove/forte/simbot/definition/ChatRoom;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Organization;
	public fun getContentAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getContentReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract fun getMessageContent ()Llove/forte/simbot/component/onebot/v11/message/OneBotMessageContent;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/message/OneBotFriendMessageEvent : love/forte/simbot/component/onebot/v11/core/event/message/OneBotPrivateMessageEvent, love/forte/simbot/event/ContactMessageEvent {
	public abstract synthetic fun content (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotFriend;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Actor;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Contact;
	public fun getContentAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getContentReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract fun getMessageContent ()Llove/forte/simbot/component/onebot/v11/message/OneBotMessageContent;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/message/OneBotGroupMessageEvent : love/forte/simbot/component/onebot/v11/core/event/message/OneBotMessageEvent, love/forte/simbot/event/ChatGroupEvent {
	public abstract synthetic fun content (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Actor;
	public synthetic fun getContent ()Llove/forte/simbot/definition/ChatGroup;
	public synthetic fun getContent ()Llove/forte/simbot/definition/ChatRoom;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Organization;
	public fun getContentAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getContentReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public fun getGroupId ()Llove/forte/simbot/common/id/LongID;
	public abstract fun getMessageContent ()Llove/forte/simbot/component/onebot/v11/message/OneBotMessageContent;
	public fun getMessageId ()Llove/forte/simbot/common/id/ID;
	public fun getRawMessage ()Ljava/lang/String;
	public abstract fun getSourceEvent ()Llove/forte/simbot/component/onebot/v11/event/message/RawGroupMessageEvent;
	public fun getSubType ()Ljava/lang/String;
	public fun getUserId ()Llove/forte/simbot/common/id/LongID;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/message/OneBotGroupPrivateMessageEvent : love/forte/simbot/component/onebot/v11/core/event/message/OneBotPrivateMessageEvent, love/forte/simbot/event/MemberMessageEvent {
	public abstract synthetic fun content (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Actor;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Member;
	public fun getContentAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getContentReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract fun getMessageContent ()Llove/forte/simbot/component/onebot/v11/message/OneBotMessageContent;
	public synthetic fun getSource ()Ljava/lang/Object;
	public fun getSource ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getSource ()Llove/forte/simbot/definition/Organization;
	public fun getSourceAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getSourceReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract synthetic fun source (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/message/OneBotMessageEvent : love/forte/simbot/component/onebot/v11/core/event/OneBotBotEvent, love/forte/simbot/event/MessageEvent {
	public abstract fun getBot ()Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;
	public abstract fun getSourceEvent ()Llove/forte/simbot/component/onebot/v11/event/message/RawMessageEvent;
	public abstract synthetic fun reply (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract synthetic fun reply (Llove/forte/simbot/message/Message;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract synthetic fun reply (Llove/forte/simbot/message/MessageContent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun replyAsync (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public fun replyAsync (Llove/forte/simbot/message/Message;)Ljava/util/concurrent/CompletableFuture;
	public fun replyAsync (Llove/forte/simbot/message/MessageContent;)Ljava/util/concurrent/CompletableFuture;
	public fun replyBlocking (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/message/OneBotMessageReceipt;
	public synthetic fun replyBlocking (Ljava/lang/String;)Llove/forte/simbot/message/MessageReceipt;
	public fun replyBlocking (Llove/forte/simbot/message/Message;)Llove/forte/simbot/component/onebot/v11/message/OneBotMessageReceipt;
	public synthetic fun replyBlocking (Llove/forte/simbot/message/Message;)Llove/forte/simbot/message/MessageReceipt;
	public fun replyBlocking (Llove/forte/simbot/message/MessageContent;)Llove/forte/simbot/component/onebot/v11/message/OneBotMessageReceipt;
	public synthetic fun replyBlocking (Llove/forte/simbot/message/MessageContent;)Llove/forte/simbot/message/MessageReceipt;
	public fun replyReserve (Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public fun replyReserve (Llove/forte/simbot/message/Message;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public fun replyReserve (Llove/forte/simbot/message/MessageContent;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/message/OneBotNormalGroupMessageEvent : love/forte/simbot/component/onebot/v11/core/event/message/OneBotGroupMessageEvent, love/forte/simbot/event/ChatGroupMessageEvent {
	public abstract synthetic fun author (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract synthetic fun content (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getAuthor ()Llove/forte/simbot/common/id/IDContainer;
	public fun getAuthor ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;
	public synthetic fun getAuthor ()Llove/forte/simbot/definition/Actor;
	public synthetic fun getAuthor ()Llove/forte/simbot/definition/Member;
	public fun getAuthorAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getAuthorReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Actor;
	public synthetic fun getContent ()Llove/forte/simbot/definition/ChatGroup;
	public synthetic fun getContent ()Llove/forte/simbot/definition/ChatRoom;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Organization;
	public fun getContentAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getContentReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract fun getMessageContent ()Llove/forte/simbot/component/onebot/v11/message/OneBotMessageContent;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/message/OneBotNoticeGroupMessageEvent : love/forte/simbot/component/onebot/v11/core/event/message/OneBotGroupMessageEvent {
	public abstract synthetic fun content (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Actor;
	public synthetic fun getContent ()Llove/forte/simbot/definition/ChatGroup;
	public synthetic fun getContent ()Llove/forte/simbot/definition/ChatRoom;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Organization;
	public fun getContentAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getContentReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract fun getMessageContent ()Llove/forte/simbot/component/onebot/v11/message/OneBotMessageContent;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/message/OneBotPrivateMessageEvent : love/forte/simbot/component/onebot/v11/core/event/message/OneBotMessageEvent {
	public abstract fun getMessageContent ()Llove/forte/simbot/component/onebot/v11/message/OneBotMessageContent;
	public fun getMessageType ()Ljava/lang/String;
	public abstract fun getSourceEvent ()Llove/forte/simbot/component/onebot/v11/event/message/RawPrivateMessageEvent;
	public fun getSubType ()Ljava/lang/String;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotAnonymousGroupMessageEventInteractionEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupMessageEventInteractionEvent, love/forte/simbot/event/ChatGroupMessageEventInteractionEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotAnonymousGroupMessageEvent;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/ChatGroup;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/ChatRoom;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotAnonymousGroupMessageEventPostReplyEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotAnonymousGroupMessageEventInteractionEvent, love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupMessageEventPostReplyEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotAnonymousGroupMessageEvent;
	public abstract fun getMessage ()Llove/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSegmentsInteractionMessage;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/ChatGroup;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/ChatRoom;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotAnonymousGroupMessageEventPreReplyEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotAnonymousGroupMessageEventInteractionEvent, love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupMessageEventPreReplyEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotAnonymousGroupMessageEvent;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/ChatGroup;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/ChatRoom;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotFriendInteractionEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSendSupportInteractionEvent, love/forte/simbot/event/ContactInteractionEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotFriend;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public synthetic fun getTarget ()Llove/forte/simbot/ability/SendSupport;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotFriend;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/Contact;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotFriendMessageEventInteractionEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotPrivateMessageEventInteractionEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotFriendMessageEvent;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotFriend;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotFriendMessageEventPostReplyEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotFriendMessageEventInteractionEvent, love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotPrivateMessageEventPostReplyEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotFriendMessageEvent;
	public abstract fun getMessage ()Llove/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSegmentsInteractionMessage;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotFriend;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotFriendMessageEventPreReplyEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotFriendMessageEventInteractionEvent, love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotPrivateMessageEventPreReplyEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotFriendMessageEvent;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotFriend;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotFriendPostSendEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotFriendInteractionEvent, love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSendSupportPostSendEvent, love/forte/simbot/event/ContactPostSendEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotFriend;
	public abstract fun getMessage ()Llove/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSegmentsInteractionMessage;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public synthetic fun getTarget ()Llove/forte/simbot/ability/SendSupport;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotFriend;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/Contact;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotFriendPreSendEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotFriendInteractionEvent, love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSendSupportPreSendEvent, love/forte/simbot/event/ContactPreSendEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotFriend;
	public abstract fun getCurrentMessage ()Llove/forte/simbot/event/InteractionMessage;
	public abstract fun getMessage ()Llove/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSegmentsInteractionMessage;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public synthetic fun getTarget ()Llove/forte/simbot/ability/SendSupport;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotFriend;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/Contact;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract fun setCurrentMessage (Llove/forte/simbot/event/InteractionMessage;)V
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupInteractionEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSendSupportInteractionEvent, love/forte/simbot/event/ChatGroupInteractionEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public synthetic fun getTarget ()Llove/forte/simbot/ability/SendSupport;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/ChatGroup;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/ChatRoom;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupMessageEventInteractionEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotMessageEventInteractionEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotGroupMessageEvent;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupMessageEventPostReplyEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupMessageEventInteractionEvent, love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotMessageEventPostReplyEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotGroupMessageEvent;
	public abstract fun getMessage ()Llove/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSegmentsInteractionMessage;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupMessageEventPreReplyEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupMessageEventInteractionEvent, love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotMessageEventPreReplyEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotGroupMessageEvent;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupPostSendEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupInteractionEvent, love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSendSupportPostSendEvent, love/forte/simbot/event/ChatGroupPostSendEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public abstract fun getMessage ()Llove/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSegmentsInteractionMessage;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public synthetic fun getTarget ()Llove/forte/simbot/ability/SendSupport;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/ChatGroup;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/ChatRoom;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupPreSendEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupInteractionEvent, love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSendSupportPreSendEvent, love/forte/simbot/event/ChatGroupPreSendEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public abstract fun getCurrentMessage ()Llove/forte/simbot/event/InteractionMessage;
	public abstract fun getMessage ()Llove/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSegmentsInteractionMessage;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public synthetic fun getTarget ()Llove/forte/simbot/ability/SendSupport;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/ChatGroup;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/ChatRoom;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract fun setCurrentMessage (Llove/forte/simbot/event/InteractionMessage;)V
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupPrivateMessageEventInteractionEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotPrivateMessageEventInteractionEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotGroupPrivateMessageEvent;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupPrivateMessageEventPostReplyEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupPrivateMessageEventInteractionEvent, love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotPrivateMessageEventPostReplyEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotGroupPrivateMessageEvent;
	public abstract fun getMessage ()Llove/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSegmentsInteractionMessage;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupPrivateMessageEventPreReplyEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupPrivateMessageEventInteractionEvent, love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotPrivateMessageEventPreReplyEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotGroupPrivateMessageEvent;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotInternalMessageInteractionEvent : love/forte/simbot/component/onebot/v11/core/event/OneBotInternalEvent, love/forte/simbot/event/InternalMessageInteractionEvent {
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotInternalMessagePostSendEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotInternalMessageInteractionEvent, love/forte/simbot/event/InternalMessagePostSendEvent {
	public abstract fun getMessage ()Llove/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSegmentsInteractionMessage;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotInternalMessagePreSendEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotInternalMessageInteractionEvent, love/forte/simbot/event/InternalMessagePreSendEvent {
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotMemberInteractionEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSendSupportInteractionEvent, love/forte/simbot/event/MemberInteractionEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public synthetic fun getTarget ()Llove/forte/simbot/ability/SendSupport;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/Member;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotMemberPostSendEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotMemberInteractionEvent, love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSendSupportPostSendEvent, love/forte/simbot/event/MemberPostSendEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;
	public abstract fun getMessage ()Llove/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSegmentsInteractionMessage;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public synthetic fun getTarget ()Llove/forte/simbot/ability/SendSupport;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/Member;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotMemberPreSendEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotMemberInteractionEvent, love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSendSupportPreSendEvent, love/forte/simbot/event/MemberPreSendEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;
	public abstract fun getCurrentMessage ()Llove/forte/simbot/event/InteractionMessage;
	public abstract fun getMessage ()Llove/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSegmentsInteractionMessage;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public synthetic fun getTarget ()Llove/forte/simbot/ability/SendSupport;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/Member;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract fun setCurrentMessage (Llove/forte/simbot/event/InteractionMessage;)V
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotMessageEventInteractionEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotInternalMessageInteractionEvent, love/forte/simbot/event/MessageEventInteractionEvent {
	public abstract fun getBot ()Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotMessageEvent;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotMessageEventPostReplyEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotMessageEventInteractionEvent, love/forte/simbot/event/MessageEventPostReplyEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotMessageEvent;
	public abstract fun getMessage ()Llove/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSegmentsInteractionMessage;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotMessageEventPreReplyEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotMessageEventInteractionEvent, love/forte/simbot/event/MessageEventPreReplyEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotMessageEvent;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotNormalGroupMessageEventInteractionEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupMessageEventInteractionEvent, love/forte/simbot/event/ChatGroupMessageEventInteractionEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotNormalGroupMessageEvent;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/ChatGroup;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/ChatRoom;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotNormalGroupMessageEventPostReplyEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupMessageEventPostReplyEvent, love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotNormalGroupMessageEventInteractionEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotNormalGroupMessageEvent;
	public abstract fun getMessage ()Llove/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSegmentsInteractionMessage;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/ChatGroup;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/ChatRoom;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotNormalGroupMessageEventPreReplyEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupMessageEventPreReplyEvent, love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotNormalGroupMessageEventInteractionEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotNormalGroupMessageEvent;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/ChatGroup;
	public synthetic fun getTarget ()Llove/forte/simbot/definition/ChatRoom;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotNoticeGroupMessageEventInteractionEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupMessageEventInteractionEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotNoticeGroupMessageEvent;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotNoticeGroupMessageEventPostReplyEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupMessageEventPostReplyEvent, love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotNoticeGroupMessageEventInteractionEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotNoticeGroupMessageEvent;
	public abstract fun getMessage ()Llove/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSegmentsInteractionMessage;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotNoticeGroupMessageEventPreReplyEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotGroupMessageEventPreReplyEvent, love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotNoticeGroupMessageEventInteractionEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotNoticeGroupMessageEvent;
	public synthetic fun getTarget ()Ljava/lang/Object;
	public fun getTarget ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public fun getTargetAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getTargetReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public synthetic fun target (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotPrivateMessageEventInteractionEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotMessageEventInteractionEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotPrivateMessageEvent;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotPrivateMessageEventPostReplyEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotMessageEventPostReplyEvent, love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotPrivateMessageEventInteractionEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotPrivateMessageEvent;
	public abstract fun getMessage ()Llove/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSegmentsInteractionMessage;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotPrivateMessageEventPreReplyEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotMessageEventPreReplyEvent, love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotPrivateMessageEventInteractionEvent {
	public abstract fun getContent ()Llove/forte/simbot/component/onebot/v11/core/event/message/OneBotPrivateMessageEvent;
}

public final class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSegmentsInteractionMessage : love/forte/simbot/event/InteractionMessage$Extension {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSegmentsInteractionMessage$Companion;
	public synthetic fun <init> (Llove/forte/simbot/event/InteractionMessage;Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Llove/forte/simbot/event/InteractionMessage;Ljava/util/List;)Llove/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSegmentsInteractionMessage;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMessage ()Llove/forte/simbot/event/InteractionMessage;
	public final fun getSegments ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSegmentsInteractionMessage$Companion {
	public final fun create (Llove/forte/simbot/event/InteractionMessage;Ljava/util/List;)Llove/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSegmentsInteractionMessage;
	public static synthetic fun create$default (Llove/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSegmentsInteractionMessage$Companion;Llove/forte/simbot/event/InteractionMessage;Ljava/util/List;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSegmentsInteractionMessage;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSendSupportInteractionEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotInternalMessageInteractionEvent, love/forte/simbot/event/SendSupportInteractionEvent {
	public abstract fun getBot ()Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;
	public abstract fun getContent ()Llove/forte/simbot/ability/SendSupport;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSendSupportPostSendEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotInternalMessagePostSendEvent, love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSendSupportInteractionEvent, love/forte/simbot/event/SendSupportPostSendEvent {
	public abstract fun getMessage ()Llove/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSegmentsInteractionMessage;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSendSupportPreSendEvent : love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotInternalMessagePreSendEvent, love/forte/simbot/component/onebot/v11/core/event/messageinteraction/OneBotSendSupportInteractionEvent, love/forte/simbot/event/SendSupportPreSendEvent {
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/meta/OneBotHeartbeatEvent : love/forte/simbot/component/onebot/v11/core/event/meta/OneBotMetaEvent {
	public fun getIntervalMilliseconds ()J
	public abstract fun getSourceEvent ()Llove/forte/simbot/component/onebot/v11/event/meta/RawHeartbeatEvent;
	public fun getStatus ()Llove/forte/simbot/component/onebot/v11/common/api/StatusResult;
}

public final class love/forte/simbot/component/onebot/v11/core/event/meta/OneBotHeartbeatEventKt {
	public static final fun getInterval (Llove/forte/simbot/component/onebot/v11/core/event/meta/OneBotHeartbeatEvent;)J
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/meta/OneBotLifecycleEvent : love/forte/simbot/component/onebot/v11/core/event/meta/OneBotMetaEvent {
	public abstract fun getSourceEvent ()Llove/forte/simbot/component/onebot/v11/event/meta/RawLifecycleEvent;
	public fun getSubType ()Ljava/lang/String;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/meta/OneBotMetaEvent : love/forte/simbot/component/onebot/v11/core/event/OneBotBotEvent {
	public abstract fun getSourceEvent ()Llove/forte/simbot/component/onebot/v11/event/meta/RawMetaEvent;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/notice/OneBotBotSelfPokeEvent : love/forte/simbot/component/onebot/v11/core/event/notice/OneBotGroupNotifyEvent, love/forte/simbot/component/onebot/v11/core/event/notice/OneBotPokeEvent {
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/notice/OneBotFriendAddEvent : love/forte/simbot/component/onebot/v11/core/event/notice/OneBotNoticeEvent {
	public abstract fun getSourceEvent ()Llove/forte/simbot/component/onebot/v11/event/notice/RawFriendAddEvent;
	public fun getUserId ()Llove/forte/simbot/common/id/LongID;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/notice/OneBotFriendRecallEvent : love/forte/simbot/component/onebot/v11/core/event/notice/OneBotNoticeEvent, love/forte/simbot/event/ContactEvent {
	public abstract synthetic fun content (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getAuthorId ()Llove/forte/simbot/common/id/LongID;
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotFriend;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Actor;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Contact;
	public fun getContentAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getContentReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public fun getMessageId ()Llove/forte/simbot/common/id/ID;
	public abstract fun getSourceEvent ()Llove/forte/simbot/component/onebot/v11/event/notice/RawFriendRecallEvent;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/notice/OneBotGroupAdminEvent : love/forte/simbot/component/onebot/v11/core/event/notice/OneBotNoticeEvent, love/forte/simbot/event/MemberEvent {
	public abstract synthetic fun content (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Actor;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Member;
	public fun getContentAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getContentReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public fun getGroupId ()Llove/forte/simbot/common/id/LongID;
	public synthetic fun getSource ()Ljava/lang/Object;
	public fun getSource ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getSource ()Llove/forte/simbot/definition/Organization;
	public fun getSourceAsync ()Ljava/util/concurrent/CompletableFuture;
	public abstract fun getSourceEvent ()Llove/forte/simbot/component/onebot/v11/event/notice/RawGroupAdminEvent;
	public fun getSourceReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public fun getSubType ()Ljava/lang/String;
	public fun getUserId ()Llove/forte/simbot/common/id/LongID;
	public fun isSet ()Z
	public abstract synthetic fun source (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class love/forte/simbot/component/onebot/v11/core/event/notice/OneBotGroupAdminEventKt {
	public static final fun isNotSet (Llove/forte/simbot/component/onebot/v11/core/event/notice/OneBotGroupAdminEvent;)Z
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/notice/OneBotGroupBanEvent : love/forte/simbot/component/onebot/v11/core/event/notice/OneBotNoticeEvent, love/forte/simbot/event/MemberEvent {
	public abstract synthetic fun content (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Actor;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Member;
	public fun getContentAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getContentReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public fun getDurationSeconds ()J
	public fun getGroupId ()Llove/forte/simbot/common/id/LongID;
	public fun getOperatorId ()Llove/forte/simbot/common/id/LongID;
	public synthetic fun getSource ()Ljava/lang/Object;
	public fun getSource ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getSource ()Llove/forte/simbot/definition/Organization;
	public fun getSourceAsync ()Ljava/util/concurrent/CompletableFuture;
	public abstract fun getSourceEvent ()Llove/forte/simbot/component/onebot/v11/event/notice/RawGroupBanEvent;
	public fun getSourceReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public fun getSubType ()Ljava/lang/String;
	public fun getUserId ()Llove/forte/simbot/common/id/LongID;
	public fun isBan ()Z
	public abstract synthetic fun source (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class love/forte/simbot/component/onebot/v11/core/event/notice/OneBotGroupBanEventKt {
	public static final fun getDuration (Llove/forte/simbot/component/onebot/v11/core/event/notice/OneBotGroupBanEvent;)J
	public static final fun isLeftBan (Llove/forte/simbot/component/onebot/v11/core/event/notice/OneBotGroupBanEvent;)Z
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/notice/OneBotGroupChangeEvent : love/forte/simbot/component/onebot/v11/core/event/notice/OneBotNoticeEvent, love/forte/simbot/event/MemberIncreaseOrDecreaseEvent {
	public abstract synthetic fun content (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Actor;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Organization;
	public fun getContentAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getContentReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract fun getGroupId ()Llove/forte/simbot/common/id/LongID;
	public fun getMember ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;
	public synthetic fun getMember ()Llove/forte/simbot/definition/Member;
	public fun getMemberAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getMemberReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract fun getUserId ()Llove/forte/simbot/common/id/LongID;
	public abstract synthetic fun member (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/notice/OneBotGroupMemberDecreaseEvent : love/forte/simbot/component/onebot/v11/core/event/notice/OneBotGroupChangeEvent, love/forte/simbot/event/MemberDecreaseEvent {
	public abstract synthetic fun content (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Actor;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Organization;
	public fun getContentAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getContentReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public fun getGroupId ()Llove/forte/simbot/common/id/LongID;
	public fun getMember ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;
	public synthetic fun getMember ()Llove/forte/simbot/definition/Member;
	public fun getMemberAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getMemberReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract fun getSourceEvent ()Llove/forte/simbot/component/onebot/v11/event/notice/RawGroupDecreaseEvent;
	public fun getUserId ()Llove/forte/simbot/common/id/LongID;
	public synthetic fun member (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/notice/OneBotGroupMemberIncreaseEvent : love/forte/simbot/component/onebot/v11/core/event/notice/OneBotGroupChangeEvent, love/forte/simbot/event/MemberIncreaseEvent {
	public abstract synthetic fun content (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Actor;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Organization;
	public fun getContentAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getContentReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public fun getGroupId ()Llove/forte/simbot/common/id/LongID;
	public fun getMember ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;
	public synthetic fun getMember ()Llove/forte/simbot/definition/Member;
	public fun getMemberAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getMemberReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract fun getSourceEvent ()Llove/forte/simbot/component/onebot/v11/event/notice/RawGroupIncreaseEvent;
	public fun getUserId ()Llove/forte/simbot/common/id/LongID;
	public abstract synthetic fun member (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/notice/OneBotGroupNotifyEvent : love/forte/simbot/component/onebot/v11/core/event/notice/OneBotNotifyEvent, love/forte/simbot/event/MemberEvent {
	public abstract synthetic fun content (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotMember;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Actor;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Member;
	public fun getContentAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getContentReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract fun getGroupId ()Llove/forte/simbot/common/id/LongID;
	public synthetic fun getSource ()Ljava/lang/Object;
	public fun getSource ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getSource ()Llove/forte/simbot/definition/Organization;
	public fun getSourceAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getSourceReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract synthetic fun source (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/notice/OneBotGroupRecallEvent : love/forte/simbot/component/onebot/v11/core/event/notice/OneBotNoticeEvent, love/forte/simbot/event/ChatGroupEvent {
	public abstract synthetic fun content (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getAuthorId ()Llove/forte/simbot/common/id/LongID;
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Actor;
	public synthetic fun getContent ()Llove/forte/simbot/definition/ChatGroup;
	public synthetic fun getContent ()Llove/forte/simbot/definition/ChatRoom;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Organization;
	public fun getContentAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getContentReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public fun getGroupId ()Llove/forte/simbot/common/id/LongID;
	public fun getMessageId ()Llove/forte/simbot/common/id/ID;
	public fun getOperatorId ()Llove/forte/simbot/common/id/LongID;
	public abstract fun getSourceEvent ()Llove/forte/simbot/component/onebot/v11/event/notice/RawGroupRecallEvent;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/notice/OneBotGroupUploadEvent : love/forte/simbot/component/onebot/v11/core/event/notice/OneBotNoticeEvent, love/forte/simbot/event/ChatGroupEvent {
	public abstract synthetic fun content (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Actor;
	public synthetic fun getContent ()Llove/forte/simbot/definition/ChatGroup;
	public synthetic fun getContent ()Llove/forte/simbot/definition/ChatRoom;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Organization;
	public fun getContentAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getContentReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public fun getFileInfo ()Llove/forte/simbot/component/onebot/v11/event/notice/RawGroupUploadEvent$FileInfo;
	public fun getGroupId ()Llove/forte/simbot/common/id/LongID;
	public abstract fun getSourceEvent ()Llove/forte/simbot/component/onebot/v11/event/notice/RawGroupUploadEvent;
	public fun getUserId ()Llove/forte/simbot/common/id/LongID;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/notice/OneBotHonorEvent : love/forte/simbot/component/onebot/v11/core/event/notice/OneBotGroupNotifyEvent {
	public fun getHonorType ()Ljava/lang/String;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/notice/OneBotLuckyKingEvent : love/forte/simbot/component/onebot/v11/core/event/notice/OneBotGroupNotifyEvent {
	public fun getTargetId ()Llove/forte/simbot/common/id/LongID;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/notice/OneBotMemberPokeEvent : love/forte/simbot/component/onebot/v11/core/event/notice/OneBotGroupNotifyEvent, love/forte/simbot/component/onebot/v11/core/event/notice/OneBotPokeEvent {
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/notice/OneBotNoticeEvent : love/forte/simbot/component/onebot/v11/core/event/OneBotBotEvent {
	public abstract fun getSourceEvent ()Llove/forte/simbot/component/onebot/v11/event/notice/RawNoticeEvent;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/notice/OneBotNotifyEvent : love/forte/simbot/component/onebot/v11/core/event/notice/OneBotNoticeEvent {
	public fun getGroupId ()Llove/forte/simbot/common/id/LongID;
	public fun getHonorType ()Ljava/lang/String;
	public abstract fun getSourceEvent ()Llove/forte/simbot/component/onebot/v11/event/notice/RawNotifyEvent;
	public fun getUserId ()Llove/forte/simbot/common/id/LongID;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/notice/OneBotPokeEvent : love/forte/simbot/component/onebot/v11/core/event/notice/OneBotNotifyEvent {
	public fun getTargetId ()Llove/forte/simbot/common/id/LongID;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/notice/OneBotPrivatePokeEvent : love/forte/simbot/component/onebot/v11/core/event/notice/OneBotPokeEvent {
}

public abstract class love/forte/simbot/component/onebot/v11/core/event/request/OneBotFriendRequestAcceptOption : love/forte/simbot/ability/AcceptOption {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/event/request/OneBotFriendRequestAcceptOption$Companion;
	public static final fun remark (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/event/request/OneBotFriendRequestAcceptOption$Remark;
}

public final class love/forte/simbot/component/onebot/v11/core/event/request/OneBotFriendRequestAcceptOption$Companion {
	public final fun remark (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/event/request/OneBotFriendRequestAcceptOption$Remark;
}

public final class love/forte/simbot/component/onebot/v11/core/event/request/OneBotFriendRequestAcceptOption$Remark : love/forte/simbot/component/onebot/v11/core/event/request/OneBotFriendRequestAcceptOption {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/event/request/OneBotFriendRequestAcceptOption$Remark;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/event/request/OneBotFriendRequestAcceptOption$Remark;Ljava/lang/String;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/event/request/OneBotFriendRequestAcceptOption$Remark;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getRemark ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/request/OneBotFriendRequestEvent : love/forte/simbot/component/onebot/v11/core/event/request/OneBotRequestEvent {
	public abstract synthetic fun accept ([Llove/forte/simbot/ability/AcceptOption;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getFlag ()Ljava/lang/String;
	public fun getMessage ()Ljava/lang/String;
	public fun getRequesterId ()Llove/forte/simbot/common/id/LongID;
	public abstract fun getSourceEvent ()Llove/forte/simbot/component/onebot/v11/event/request/RawFriendRequestEvent;
	public fun getType ()Llove/forte/simbot/event/RequestEvent$Type;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/request/OneBotGroupRequestEvent : love/forte/simbot/component/onebot/v11/core/event/request/OneBotRequestEvent, love/forte/simbot/event/OrganizationJoinRequestEvent {
	public abstract synthetic fun content (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotGroup;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Actor;
	public synthetic fun getContent ()Llove/forte/simbot/definition/Organization;
	public fun getContentAsync ()Ljava/util/concurrent/CompletableFuture;
	public fun getContentReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public fun getFlag ()Ljava/lang/String;
	public fun getMessage ()Ljava/lang/String;
	public fun getRequester ()Llove/forte/simbot/component/onebot/v11/core/actor/OneBotStranger;
	public synthetic fun getRequester ()Llove/forte/simbot/definition/User;
	public fun getRequesterAsync ()Ljava/util/concurrent/CompletableFuture;
	public synthetic fun getRequesterId ()Llove/forte/simbot/common/id/ID;
	public fun getRequesterId ()Llove/forte/simbot/common/id/LongID;
	public fun getRequesterReserve ()Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public abstract fun getSourceEvent ()Llove/forte/simbot/component/onebot/v11/event/request/RawGroupRequestEvent;
	public fun getType ()Llove/forte/simbot/event/RequestEvent$Type;
	public abstract synthetic fun reject ([Llove/forte/simbot/ability/RejectOption;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract synthetic fun requester (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class love/forte/simbot/component/onebot/v11/core/event/request/OneBotGroupRequestRejectOption : love/forte/simbot/ability/RejectOption {
	public static final field Companion Llove/forte/simbot/component/onebot/v11/core/event/request/OneBotGroupRequestRejectOption$Companion;
	public static final fun reason (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/event/request/OneBotGroupRequestRejectOption$Reason;
}

public final class love/forte/simbot/component/onebot/v11/core/event/request/OneBotGroupRequestRejectOption$Companion {
	public final fun reason (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/event/request/OneBotGroupRequestRejectOption$Reason;
}

public final class love/forte/simbot/component/onebot/v11/core/event/request/OneBotGroupRequestRejectOption$Reason : love/forte/simbot/component/onebot/v11/core/event/request/OneBotGroupRequestRejectOption {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/event/request/OneBotGroupRequestRejectOption$Reason;
	public static synthetic fun copy$default (Llove/forte/simbot/component/onebot/v11/core/event/request/OneBotGroupRequestRejectOption$Reason;Ljava/lang/String;ILjava/lang/Object;)Llove/forte/simbot/component/onebot/v11/core/event/request/OneBotGroupRequestRejectOption$Reason;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getReason ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/request/OneBotRequestEvent : love/forte/simbot/component/onebot/v11/core/event/OneBotBotEvent, love/forte/simbot/event/RequestEvent {
	public abstract synthetic fun accept (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract synthetic fun accept ([Llove/forte/simbot/ability/AcceptOption;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getSourceEvent ()Llove/forte/simbot/component/onebot/v11/event/request/RawRequestEvent;
	public abstract synthetic fun reject (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract synthetic fun reject ([Llove/forte/simbot/ability/RejectOption;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/stage/OneBotBotRegisteredEvent : love/forte/simbot/component/onebot/v11/core/event/stage/OneBotBotStageEvent, love/forte/simbot/event/BotRegisteredEvent {
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/stage/OneBotBotStageEvent : love/forte/simbot/component/onebot/v11/core/event/OneBotInternalEvent, love/forte/simbot/event/BotStageEvent {
	public abstract fun getBot ()Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;
}

public abstract interface class love/forte/simbot/component/onebot/v11/core/event/stage/OneBotBotStartedEvent : love/forte/simbot/component/onebot/v11/core/event/stage/OneBotBotStageEvent, love/forte/simbot/event/BotStartedEvent {
}

public final class love/forte/simbot/component/onebot/v11/core/message/OneBotMessageExtensions {
	public static final synthetic fun getImageInfo (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotImage$Element;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final synthetic fun getImageInfo (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotImage;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun getImageInfoAsync (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotImage$Element;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;)Ljava/util/concurrent/CompletableFuture;
	public static final fun getImageInfoAsync (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotImage$Element;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Lkotlinx/coroutines/CoroutineScope;)Ljava/util/concurrent/CompletableFuture;
	public static final fun getImageInfoAsync (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotImage$Element;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Ljava/util/concurrent/CompletableFuture;
	public static final fun getImageInfoAsync (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotImage;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Ljava/util/concurrent/CompletableFuture;
	public static synthetic fun getImageInfoAsync$default (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotImage$Element;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
	public static synthetic fun getImageInfoAsync$default (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotImage;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
	public static final fun getImageInfoBlocking (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotImage$Element;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;)Llove/forte/simbot/component/onebot/v11/core/api/GetImageResult;
	public static final fun getImageInfoBlocking (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotImage;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;)Llove/forte/simbot/component/onebot/v11/core/api/GetImageResult;
	public static final fun getImageInfoReserve (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotImage$Element;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun getImageInfoReserve (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotImage$Element;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Lkotlinx/coroutines/CoroutineScope;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun getImageInfoReserve (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotImage$Element;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun getImageInfoReserve (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotImage;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun getImageInfoReserve (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotImage;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Lkotlinx/coroutines/CoroutineScope;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun getImageInfoReserve (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotImage;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static synthetic fun getImageInfoReserve$default (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotImage$Element;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static synthetic fun getImageInfoReserve$default (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotImage;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final synthetic fun getRecordInfo (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotRecord;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun getRecordInfoAsync (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotRecord;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
	public static final fun getRecordInfoAsync (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotRecord;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Ljava/lang/String;Lkotlinx/coroutines/CoroutineScope;)Ljava/util/concurrent/CompletableFuture;
	public static final fun getRecordInfoAsync (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotRecord;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Ljava/lang/String;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Ljava/util/concurrent/CompletableFuture;
	public static synthetic fun getRecordInfoAsync$default (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotRecord;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Ljava/lang/String;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
	public static final fun getRecordInfoBlocking (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotRecord;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Ljava/lang/String;)Llove/forte/simbot/component/onebot/v11/core/api/GetRecordResult;
	public static final fun getRecordInfoReserve (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotRecord;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Ljava/lang/String;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun getRecordInfoReserve (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotRecord;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Ljava/lang/String;Lkotlinx/coroutines/CoroutineScope;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static final fun getRecordInfoReserve (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotRecord;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Ljava/lang/String;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
	public static synthetic fun getRecordInfoReserve$default (Llove/forte/simbot/component/onebot/v11/message/segment/OneBotRecord;Llove/forte/simbot/component/onebot/v11/core/bot/OneBotBot;Ljava/lang/String;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Llove/forte/simbot/suspendrunner/reserve/SuspendReserve;
}

